{"ast":null,"code":"import _defineProperty from\"C:\\\\webgis\\\\newfold\\\\dapp-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\defineProperty.js\";import _objectSpread from\"C:\\\\webgis\\\\newfold\\\\dapp-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _createForOfIteratorHelper from\"C:\\\\webgis\\\\newfold\\\\dapp-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createForOfIteratorHelper.js\";import _asyncToGenerator from\"C:\\\\webgis\\\\newfold\\\\dapp-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\webgis\\\\newfold\\\\dapp-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\webgis\\\\newfold\\\\dapp-project\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{Card,Form,notification}from\"antd\";import{useMemo,useState}from\"react\";import Address from\"components/Address/Address\";import{useMoralis,useMoralisQuery}from\"react-moralis\";import{getEllipsisTxt}from\"helpers/formatters\";import ContractMethods from\"./ContractMethods\";import ContractResolver from\"./ContractResolver\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Contract(){var _useMoralis=useMoralis(),Moralis=_useMoralis.Moralis,chainId=_useMoralis.chainId;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),responses=_useState2[0],setResponses=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),contract=_useState4[0],setContract=_useState4[1];/**Moralis Live query for displaying contract's events*/var _useMoralisQuery=useMoralisQuery(\"Events\",function(query){return query;},[],{live:true}),data=_useMoralisQuery.data;/** Automatically builds write and read components for interacting with contract*/var displayedContractFunctions=useMemo(function(){if(!(contract!==null&&contract!==void 0&&contract.abi))return[];return contract.abi.filter(function(method){return method[\"type\"]===\"function\";});},[contract]);/** Returns true in case if contract is deployed to active chain in wallet */var isDeployedToActiveChain=useMemo(function(){if(!(contract!==null&&contract!==void 0&&contract.networks))return undefined;return[parseInt(chainId,16)]in contract.networks;},[contract,chainId]);var contractAddress=useMemo(function(){var _contract$networks$pa;if(!isDeployedToActiveChain)return null;return((_contract$networks$pa=contract.networks[parseInt(chainId,16)])===null||_contract$networks$pa===void 0?void 0:_contract$networks$pa[\"address\"])||null;},[chainId,contract,isDeployedToActiveChain]);/** Default function for showing notifications*/var openNotification=function openNotification(_ref){var message=_ref.message,description=_ref.description;notification.open({placement:\"bottomRight\",message:message,description:description});};return/*#__PURE__*/_jsxs(\"div\",{style:{margin:\"auto\",display:\"flex\",gap:\"20px\",marginTop:\"25\",width:\"70vw\"},children:[/*#__PURE__*/_jsxs(Card,{title:/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"},children:[\"Your contract: \",contract===null||contract===void 0?void 0:contract.contractName,/*#__PURE__*/_jsx(Address,{avatar:\"left\",copyable:true,address:contractAddress,size:8})]}),size:\"large\",style:{width:\"60%\",boxShadow:\"0 0.5rem 1.2rem rgb(189 197 209 / 20%)\",border:\"1px solid #e7eaf3\",borderRadius:\"0.5rem\"},children:[/*#__PURE__*/_jsx(ContractResolver,{setContract:setContract,contract:contract}),isDeployedToActiveChain===true&&/*#__PURE__*/_jsx(Form.Provider,{onFormFinish:/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(name,_ref2){var forms,params,isView,_iterator,_step,method,options,tx;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:forms=_ref2.forms;params=forms[name].getFieldsValue();isView=false;_iterator=_createForOfIteratorHelper(contract===null||contract===void 0?void 0:contract.abi);_context.prev=4;_iterator.s();case 6:if((_step=_iterator.n()).done){_context.next=14;break;}method=_step.value;if(!(method.name!==name)){_context.next=10;break;}return _context.abrupt(\"continue\",12);case 10:console.log(method);if(method.stateMutability===\"view\")isView=true;case 12:_context.next=6;break;case 14:_context.next=19;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](4);_iterator.e(_context.t0);case 19:_context.prev=19;_iterator.f();return _context.finish(19);case 22:options={contractAddress:contractAddress,functionName:name,abi:contract===null||contract===void 0?void 0:contract.abi,params:params};if(isView){_context.next=30;break;}_context.next=26;return Moralis.executeFunction(_objectSpread({awaitReceipt:false},options));case 26:tx=_context.sent;tx.on(\"transactionHash\",function(hash){setResponses(_objectSpread(_objectSpread({},responses),{},_defineProperty({},name,{result:null,isLoading:true})));openNotification({message:\"ðŸ”Š New Transaction\",description:\"\".concat(hash)});console.log(\"ðŸ”Š New Transaction\",hash);}).on(\"receipt\",function(receipt){setResponses(_objectSpread(_objectSpread({},responses),{},_defineProperty({},name,{result:null,isLoading:false})));openNotification({message:\"ðŸ“ƒ New Receipt\",description:\"\".concat(receipt.transactionHash)});console.log(\"ðŸ”Š New Receipt: \",receipt);}).on(\"error\",function(error){console.error(error);});_context.next=32;break;case 30:console.log(\"options22\",options);Moralis.executeFunction(options).then(function(response){return setResponses(_objectSpread(_objectSpread({},responses),{},_defineProperty({},name,{result:response,isLoading:false})));});case 32:case\"end\":return _context.stop();}}},_callee,null,[[4,16,19,22]]);}));return function(_x,_x2){return _ref3.apply(this,arguments);};}(),children:/*#__PURE__*/_jsx(ContractMethods,{displayedContractFunctions:displayedContractFunctions,responses:responses})}),isDeployedToActiveChain===false&&/*#__PURE__*/_jsx(_Fragment,{children:\"The contract is not deployed to the active \".concat(chainId,\" chain. Switch your active chain or try agan later.\")})]}),/*#__PURE__*/_jsx(Card,{title:\"Contract Events\",size:\"large\",style:{width:\"40%\",boxShadow:\"0 0.5rem 1.2rem rgb(189 197 209 / 20%)\",border:\"1px solid #e7eaf3\",borderRadius:\"0.5rem\"},children:data.map(function(event,key){return/*#__PURE__*/_jsx(Card,{title:\"Transfer event\",size:\"small\",style:{marginBottom:\"20px\"},children:getEllipsisTxt(event.attributes.transaction_hash,14)},key);})})]});}","map":{"version":3,"sources":["C:/webgis/newfold/dapp-project/src/components/Contract/Contract.jsx"],"names":["Card","Form","notification","useMemo","useState","Address","useMoralis","useMoralisQuery","getEllipsisTxt","ContractMethods","ContractResolver","Contract","Moralis","chainId","responses","setResponses","contract","setContract","query","live","data","displayedContractFunctions","abi","filter","method","isDeployedToActiveChain","networks","undefined","parseInt","contractAddress","openNotification","message","description","open","placement","margin","display","gap","marginTop","width","justifyContent","alignItems","contractName","boxShadow","border","borderRadius","name","forms","params","getFieldsValue","isView","console","log","stateMutability","options","functionName","executeFunction","awaitReceipt","tx","on","hash","result","isLoading","receipt","transactionHash","error","then","response","map","event","key","marginBottom","attributes","transaction_hash"],"mappings":"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","sourcesContent":["import { Card, Form, notification } from \"antd\";\r\nimport { useMemo, useState } from \"react\";\r\nimport Address from \"components/Address/Address\";\r\nimport { useMoralis, useMoralisQuery } from \"react-moralis\";\r\nimport { getEllipsisTxt } from \"helpers/formatters\";\r\nimport ContractMethods from \"./ContractMethods\";\r\nimport ContractResolver from \"./ContractResolver\";\r\n\r\nexport default function Contract() {\r\n  const { Moralis, chainId } = useMoralis();\r\n  const [responses, setResponses] = useState({});\r\n  const [contract, setContract] = useState();\r\n\r\n  /**Moralis Live query for displaying contract's events*/\r\n  const { data } = useMoralisQuery(\"Events\", (query) => query, [], {\r\n    live: true,\r\n  });\r\n\r\n  /** Automatically builds write and read components for interacting with contract*/\r\n  const displayedContractFunctions = useMemo(() => {\r\n    if (!contract?.abi) return [];\r\n    return contract.abi.filter((method) => method[\"type\"] === \"function\");\r\n  }, [contract]);\r\n\r\n  /** Returns true in case if contract is deployed to active chain in wallet */\r\n  const isDeployedToActiveChain = useMemo(() => {\r\n    if (!contract?.networks) return undefined;\r\n    return [parseInt(chainId, 16)] in contract.networks;\r\n  }, [contract, chainId]);\r\n\r\n  const contractAddress = useMemo(() => {\r\n    if (!isDeployedToActiveChain) return null;\r\n    return contract.networks[parseInt(chainId, 16)]?.[\"address\"] || null;\r\n  }, [chainId, contract, isDeployedToActiveChain]);\r\n\r\n  /** Default function for showing notifications*/\r\n  const openNotification = ({ message, description }) => {\r\n    notification.open({\r\n      placement: \"bottomRight\",\r\n      message,\r\n      description,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        gap: \"20px\",\r\n        marginTop: \"25\",\r\n        width: \"70vw\",\r\n      }}\r\n    >\r\n      <Card\r\n        title={\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            Your contract: {contract?.contractName}\r\n            <Address\r\n              avatar=\"left\"\r\n              copyable\r\n              address={contractAddress}\r\n              size={8}\r\n            />\r\n          </div>\r\n        }\r\n        size=\"large\"\r\n        style={{\r\n          width: \"60%\",\r\n          boxShadow: \"0 0.5rem 1.2rem rgb(189 197 209 / 20%)\",\r\n          border: \"1px solid #e7eaf3\",\r\n          borderRadius: \"0.5rem\",\r\n        }}\r\n      >\r\n        <ContractResolver setContract={setContract} contract={contract} />\r\n\r\n        {isDeployedToActiveChain === true && (\r\n          <Form.Provider\r\n            onFormFinish={async (name, { forms }) => {\r\n              const params = forms[name].getFieldsValue();\r\n\r\n              let isView = false;\r\n\r\n              for (let method of contract?.abi) {\r\n                if (method.name !== name) continue;\r\n                console.log(method);\r\n                if (method.stateMutability === \"view\") isView = true;\r\n              }\r\n\r\n              const options = {\r\n                contractAddress,\r\n                functionName: name,\r\n                abi: contract?.abi,\r\n                params,\r\n              };\r\n\r\n              if (!isView) {\r\n                const tx = await Moralis.executeFunction({\r\n                  awaitReceipt: false,\r\n                  ...options,\r\n                });\r\n                tx.on(\"transactionHash\", (hash) => {\r\n                  setResponses({\r\n                    ...responses,\r\n                    [name]: { result: null, isLoading: true },\r\n                  });\r\n                  openNotification({\r\n                    message: \"ðŸ”Š New Transaction\",\r\n                    description: `${hash}`,\r\n                  });\r\n                  console.log(\"ðŸ”Š New Transaction\", hash);\r\n                })\r\n                  .on(\"receipt\", (receipt) => {\r\n                    setResponses({\r\n                      ...responses,\r\n                      [name]: { result: null, isLoading: false },\r\n                    });\r\n                    openNotification({\r\n                      message: \"ðŸ“ƒ New Receipt\",\r\n                      description: `${receipt.transactionHash}`,\r\n                    });\r\n                    console.log(\"ðŸ”Š New Receipt: \", receipt);\r\n                  })\r\n                  .on(\"error\", (error) => {\r\n                    console.error(error);\r\n                  });\r\n              } else {\r\n                console.log(\"options22\", options);\r\n                Moralis.executeFunction(options).then((response) =>\r\n                  setResponses({\r\n                    ...responses,\r\n                    [name]: { result: response, isLoading: false },\r\n                  }),\r\n                );\r\n              }\r\n            }}\r\n          >\r\n            <ContractMethods\r\n              displayedContractFunctions={displayedContractFunctions}\r\n              responses={responses}\r\n            />\r\n          </Form.Provider>\r\n        )}\r\n        {isDeployedToActiveChain === false && (\r\n          <>{`The contract is not deployed to the active ${chainId} chain. Switch your active chain or try agan later.`}</>\r\n        )}\r\n      </Card>\r\n      <Card\r\n        title={\"Contract Events\"}\r\n        size=\"large\"\r\n        style={{\r\n          width: \"40%\",\r\n          boxShadow: \"0 0.5rem 1.2rem rgb(189 197 209 / 20%)\",\r\n          border: \"1px solid #e7eaf3\",\r\n          borderRadius: \"0.5rem\",\r\n        }}\r\n      >\r\n        {data.map((event, key) => (\r\n          <Card\r\n            title={\"Transfer event\"}\r\n            size=\"small\"\r\n            style={{ marginBottom: \"20px\" }}\r\n            key={key}\r\n          >\r\n            {getEllipsisTxt(event.attributes.transaction_hash, 14)}\r\n          </Card>\r\n        ))}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}