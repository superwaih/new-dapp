{"ast":null,"code":"var _jsxFileName = \"C:\\\\webgis\\\\newfold\\\\ethereum-boilerplate\\\\src\\\\components\\\\TokenPrice.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useTokenPrice } from \"react-moralis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  token: {\n    padding: \"0 7px\",\n    height: \"42px\",\n    gap: \"5px\",\n    width: \"fit-content\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    whiteSpace: \"nowrap\"\n  }\n};\n\nfunction TokenPrice(props) {\n  _s();\n\n  const {\n    data: formattedData\n  } = useTokenPrice(props);\n  const [isUSDMode, setIsUSDMode] = useState(true);\n\n  const toggleDisplayStyle = () => setIsUSDMode(!isUSDMode);\n\n  const noLogoToken = \"https://etherscan.io/images/main/empty-token.png\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.token,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.image || noLogoToken,\n      alt: \"logo\",\n      style: {\n        height: (props === null || props === void 0 ? void 0 : props.size) || \"35px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: toggleDisplayStyle,\n      title: `Show in ${isUSDMode ? \"ETH\" : \"USD\"}`,\n      children: formattedData && (isUSDMode ? formattedData.formattedUsd : formattedData.formattedNative)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TokenPrice, \"m9bbHsoudqVOyWTnRTbDzwu467U=\", false, function () {\n  return [useTokenPrice];\n});\n\n_c = TokenPrice;\nexport default TokenPrice;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenPrice\");","map":{"version":3,"sources":["C:/webgis/newfold/ethereum-boilerplate/src/components/TokenPrice.jsx"],"names":["useState","useTokenPrice","styles","token","padding","height","gap","width","display","justifyContent","alignItems","whiteSpace","TokenPrice","props","data","formattedData","isUSDMode","setIsUSDMode","toggleDisplayStyle","noLogoToken","image","size","cursor","formattedUsd","formattedNative"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,eAA9B;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,OADJ;AAELC,IAAAA,MAAM,EAAE,MAFH;AAGLC,IAAAA,GAAG,EAAE,KAHA;AAILC,IAAAA,KAAK,EAAE,aAJF;AAKLC,IAAAA,OAAO,EAAE,MALJ;AAMLC,IAAAA,cAAc,EAAE,QANX;AAOLC,IAAAA,UAAU,EAAE,QAPP;AAQLC,IAAAA,UAAU,EAAE;AARP;AADM,CAAf;;AAYA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAA0Bd,aAAa,CAACY,KAAD,CAA7C;AAEA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMkB,kBAAkB,GAAG,MAAMD,YAAY,CAAC,CAACD,SAAF,CAA7C;;AAEA,QAAMG,WAAW,GAAG,kDAApB;AAEA,sBACE;AAAK,IAAA,KAAK,EAAEjB,MAAM,CAACC,KAAnB;AAAA,4BACE;AACE,MAAA,GAAG,EAAEU,KAAK,CAACO,KAAN,IAAeD,WADtB;AAEE,MAAA,GAAG,EAAC,MAFN;AAGE,MAAA,KAAK,EAAE;AAAEd,QAAAA,MAAM,EAAE,CAAAQ,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEQ,IAAP,KAAe;AAAzB;AAHT;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OADT;AAEE,MAAA,OAAO,EAAEJ,kBAFX;AAGE,MAAA,KAAK,EAAG,WAAUF,SAAS,GAAG,KAAH,GAAW,KAAM,EAH9C;AAAA,gBAKGD,aAAa,KACXC,SAAS,GACND,aAAa,CAACQ,YADR,GAENR,aAAa,CAACS,eAHN;AALhB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA5BQZ,U;UACyBX,a;;;KADzBW,U;AA6BT,eAAeA,UAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { useTokenPrice } from \"react-moralis\";\r\n\r\nconst styles = {\r\n  token: {\r\n    padding: \"0 7px\",\r\n    height: \"42px\",\r\n    gap: \"5px\",\r\n    width: \"fit-content\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n};\r\nfunction TokenPrice(props) {\r\n  const { data: formattedData } = useTokenPrice(props);\r\n\r\n  const [isUSDMode, setIsUSDMode] = useState(true);\r\n\r\n  const toggleDisplayStyle = () => setIsUSDMode(!isUSDMode);\r\n\r\n  const noLogoToken = \"https://etherscan.io/images/main/empty-token.png\";\r\n\r\n  return (\r\n    <div style={styles.token}>\r\n      <img\r\n        src={props.image || noLogoToken}\r\n        alt=\"logo\"\r\n        style={{ height: props?.size || \"35px\" }}\r\n      />\r\n      <span\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={toggleDisplayStyle}\r\n        title={`Show in ${isUSDMode ? \"ETH\" : \"USD\"}`}\r\n      >\r\n        {formattedData &&\r\n          (isUSDMode\r\n            ? formattedData.formattedUsd\r\n            : formattedData.formattedNative)}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\nexport default TokenPrice;\r\n"]},"metadata":{},"sourceType":"module"}