{"ast":null,"code":"import{useMoralis,useERC20Balances}from\"react-moralis\";import{Skeleton,Table}from\"antd\";import{getEllipsisTxt}from\"../helpers/formatters\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ERC20Balance(props){var _useERC20Balances=useERC20Balances(props),assets=_useERC20Balances.data;var _useMoralis=useMoralis(),Moralis=_useMoralis.Moralis;var columns=[{title:\"\",dataIndex:\"logo\",key:\"logo\",render:function render(logo){return/*#__PURE__*/_jsx(\"img\",{src:logo||\"https://etherscan.io/images/main/empty-token.png\",alt:\"nologo\",width:\"28px\",height:\"28px\"});}},{title:\"Name\",dataIndex:\"name\",key:\"name\",render:function render(name){return name;}},{title:\"Symbol\",dataIndex:\"symbol\",key:\"symbol\",render:function render(symbol){return symbol;}},{title:\"Balance\",dataIndex:\"balance\",key:\"balance\",render:function render(value,item){var _Moralis$Units;return parseFloat(Moralis===null||Moralis===void 0?void 0:(_Moralis$Units=Moralis.Units)===null||_Moralis$Units===void 0?void 0:_Moralis$Units.FromWei(value,item.decimals)).toFixed(6);}},{title:\"Address\",dataIndex:\"token_address\",key:\"token_address\",render:function render(address){return getEllipsisTxt(address,5);}}];return/*#__PURE__*/_jsxs(\"div\",{style:{width:\"65vw\",padding:\"15px\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83D\\uDCB0Token Balances\"}),/*#__PURE__*/_jsx(Skeleton,{loading:!assets,children:/*#__PURE__*/_jsx(Table,{dataSource:assets,columns:columns,rowKey:function rowKey(record){return record.token_address;}})})]});}export default ERC20Balance;","map":{"version":3,"sources":["C:/webgis/newfold/dapp-project/src/components/ERC20Balance.jsx"],"names":["useMoralis","useERC20Balances","Skeleton","Table","getEllipsisTxt","ERC20Balance","props","assets","data","Moralis","columns","title","dataIndex","key","render","logo","name","symbol","value","item","parseFloat","Units","FromWei","decimals","toFixed","address","width","padding","record","token_address"],"mappings":"AAAA,OAASA,UAAT,CAAqBC,gBAArB,KAA6C,eAA7C,CACA,OAASC,QAAT,CAAmBC,KAAnB,KAAgC,MAAhC,CACA,OAASC,cAAT,KAA+B,uBAA/B,C,wFAEA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3B,sBAAyBL,gBAAgB,CAACK,KAAD,CAAzC,CAAcC,MAAd,mBAAQC,IAAR,CACA,gBAAoBR,UAAU,EAA9B,CAAQS,OAAR,aAAQA,OAAR,CAEA,GAAMC,CAAAA,OAAO,CAAG,CACd,CACEC,KAAK,CAAE,EADT,CAEEC,SAAS,CAAE,MAFb,CAGEC,GAAG,CAAE,MAHP,CAIEC,MAAM,CAAE,gBAACC,IAAD,qBACN,YACE,GAAG,CAAEA,IAAI,EAAI,kDADf,CAEE,GAAG,CAAC,QAFN,CAGE,KAAK,CAAC,MAHR,CAIE,MAAM,CAAC,MAJT,EADM,EAJV,CADc,CAcd,CACEJ,KAAK,CAAE,MADT,CAEEC,SAAS,CAAE,MAFb,CAGEC,GAAG,CAAE,MAHP,CAIEC,MAAM,CAAE,gBAACE,IAAD,QAAUA,CAAAA,IAAV,EAJV,CAdc,CAoBd,CACEL,KAAK,CAAE,QADT,CAEEC,SAAS,CAAE,QAFb,CAGEC,GAAG,CAAE,QAHP,CAIEC,MAAM,CAAE,gBAACG,MAAD,QAAYA,CAAAA,MAAZ,EAJV,CApBc,CA0Bd,CACEN,KAAK,CAAE,SADT,CAEEC,SAAS,CAAE,SAFb,CAGEC,GAAG,CAAE,SAHP,CAIEC,MAAM,CAAE,gBAACI,KAAD,CAAQC,IAAR,2BACNC,CAAAA,UAAU,CAACX,OAAD,SAACA,OAAD,iCAACA,OAAO,CAAEY,KAAV,yCAAC,eAAgBC,OAAhB,CAAwBJ,KAAxB,CAA+BC,IAAI,CAACI,QAApC,CAAD,CAAV,CAA0DC,OAA1D,CAAkE,CAAlE,CADM,EAJV,CA1Bc,CAiCd,CACEb,KAAK,CAAE,SADT,CAEEC,SAAS,CAAE,eAFb,CAGEC,GAAG,CAAE,eAHP,CAIEC,MAAM,CAAE,gBAACW,OAAD,QAAarB,CAAAA,cAAc,CAACqB,OAAD,CAAU,CAAV,CAA3B,EAJV,CAjCc,CAAhB,CAyCA,mBACE,aAAK,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAT,CAAiBC,OAAO,CAAE,MAA1B,CAAZ,wBACE,kDADF,cAEE,KAAC,QAAD,EAAU,OAAO,CAAE,CAACpB,MAApB,uBACE,KAAC,KAAD,EACE,UAAU,CAAEA,MADd,CAEE,OAAO,CAAEG,OAFX,CAGE,MAAM,CAAE,gBAACkB,MAAD,CAAY,CAClB,MAAOA,CAAAA,MAAM,CAACC,aAAd,CACD,CALH,EADF,EAFF,GADF,CAcD,CACD,cAAexB,CAAAA,YAAf","sourcesContent":["import { useMoralis, useERC20Balances } from \"react-moralis\";\r\nimport { Skeleton, Table } from \"antd\";\r\nimport { getEllipsisTxt } from \"../helpers/formatters\";\r\n\r\nfunction ERC20Balance(props) {\r\n  const { data: assets } = useERC20Balances(props);\r\n  const { Moralis } = useMoralis();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"\",\r\n      dataIndex: \"logo\",\r\n      key: \"logo\",\r\n      render: (logo) => (\r\n        <img\r\n          src={logo || \"https://etherscan.io/images/main/empty-token.png\"}\r\n          alt=\"nologo\"\r\n          width=\"28px\"\r\n          height=\"28px\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (name) => name,\r\n    },\r\n    {\r\n      title: \"Symbol\",\r\n      dataIndex: \"symbol\",\r\n      key: \"symbol\",\r\n      render: (symbol) => symbol,\r\n    },\r\n    {\r\n      title: \"Balance\",\r\n      dataIndex: \"balance\",\r\n      key: \"balance\",\r\n      render: (value, item) =>\r\n        parseFloat(Moralis?.Units?.FromWei(value, item.decimals)).toFixed(6),\r\n    },\r\n    {\r\n      title: \"Address\",\r\n      dataIndex: \"token_address\",\r\n      key: \"token_address\",\r\n      render: (address) => getEllipsisTxt(address, 5),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ width: \"65vw\", padding: \"15px\" }}>\r\n      <h1>ðŸ’°Token Balances</h1>\r\n      <Skeleton loading={!assets}>\r\n        <Table\r\n          dataSource={assets}\r\n          columns={columns}\r\n          rowKey={(record) => {\r\n            return record.token_address;\r\n          }}\r\n        />\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n}\r\nexport default ERC20Balance;\r\n"]},"metadata":{},"sourceType":"module"}