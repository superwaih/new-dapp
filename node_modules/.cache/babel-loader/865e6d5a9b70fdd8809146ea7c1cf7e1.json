{"ast":null,"code":"import _objectSpread from\"C:\\\\webgis\\\\newfold\\\\dapp-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import{Skeleton}from\"antd\";import Blockies from\"react-blockies\";import{useMoralis}from\"react-moralis\";/**\r\n * Shows a blockie image for the provided wallet address\r\n * @param {*} props\r\n * @returns <Blockies> JSX Elemenet\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";function Blockie(props){var _useMoralis=useMoralis(),account=_useMoralis.account,isAuthenticated=_useMoralis.isAuthenticated;if(!props.address&&(!account||!isAuthenticated))return/*#__PURE__*/_jsx(Skeleton.Avatar,{active:true,size:40});return/*#__PURE__*/_jsx(Blockies,_objectSpread({seed:props.currentWallet?account.toLowerCase():props.address.toLowerCase(),className:\"identicon\"},props));}export default Blockie;","map":{"version":3,"sources":["C:/webgis/newfold/dapp-project/src/components/Blockie.jsx"],"names":["Skeleton","Blockies","useMoralis","Blockie","props","account","isAuthenticated","address","currentWallet","toLowerCase"],"mappings":"4HAAA,OAASA,QAAT,KAAyB,MAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,OAASC,UAAT,KAA2B,eAA3B,CAEA;AACA;AACA;AACA;AACA,G,2CAEA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACtB,gBAAqCF,UAAU,EAA/C,CAAQG,OAAR,aAAQA,OAAR,CAAiBC,eAAjB,aAAiBA,eAAjB,CACA,GAAI,CAACF,KAAK,CAACG,OAAP,GAAmB,CAACF,OAAD,EAAY,CAACC,eAAhC,CAAJ,CACE,mBAAO,KAAC,QAAD,CAAU,MAAV,EAAiB,MAAM,KAAvB,CAAwB,IAAI,CAAE,EAA9B,EAAP,CAEF,mBACE,KAAC,QAAD,gBACE,IAAI,CACFF,KAAK,CAACI,aAAN,CACIH,OAAO,CAACI,WAAR,EADJ,CAEIL,KAAK,CAACG,OAAN,CAAcE,WAAd,EAJR,CAME,SAAS,CAAC,WANZ,EAOML,KAPN,EADF,CAWD,CAED,cAAeD,CAAAA,OAAf","sourcesContent":["import { Skeleton } from \"antd\";\r\nimport Blockies from \"react-blockies\";\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\n/**\r\n * Shows a blockie image for the provided wallet address\r\n * @param {*} props\r\n * @returns <Blockies> JSX Elemenet\r\n */\r\n\r\nfunction Blockie(props) {\r\n  const { account, isAuthenticated } = useMoralis();\r\n  if (!props.address && (!account || !isAuthenticated))\r\n    return <Skeleton.Avatar active size={40} />;\r\n\r\n  return (\r\n    <Blockies\r\n      seed={\r\n        props.currentWallet\r\n          ? account.toLowerCase()\r\n          : props.address.toLowerCase()\r\n      }\r\n      className=\"identicon\"\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Blockie;\r\n"]},"metadata":{},"sourceType":"module"}