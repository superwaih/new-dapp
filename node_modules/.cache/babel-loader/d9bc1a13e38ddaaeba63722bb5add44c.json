{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\webgis\\\\newfold\\\\dapp-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\webgis\\\\newfold\\\\dapp-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\webgis\\\\newfold\\\\dapp-project\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{useEffect,useState}from\"react\";import{useMoralis,useMoralisWeb3Api}from\"react-moralis\";export var useERC20Balance=function useERC20Balance(params){var _useMoralisWeb3Api=useMoralisWeb3Api(),account=_useMoralisWeb3Api.account;var _useMoralis=useMoralis(),isInitialized=_useMoralis.isInitialized,chainId=_useMoralis.chainId,walletAddress=_useMoralis.account;var _useState=useState(),_useState2=_slicedToArray(_useState,2),assets=_useState2[0],setAssets=_useState2[1];useEffect(function(){if(isInitialized){fetchERC20Balance().then(function(balance){return setAssets(balance);});}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[isInitialized,chainId,walletAddress]);var fetchERC20Balance=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return account.getTokenBalances({address:walletAddress,chain:(params===null||params===void 0?void 0:params.chain)||chainId}).then(function(result){return result;});case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));return function fetchERC20Balance(){return _ref.apply(this,arguments);};}();return{fetchERC20Balance:fetchERC20Balance,assets:assets};};","map":{"version":3,"sources":["C:/webgis/newfold/dapp-project/src/hooks/useERC20Balance.js"],"names":["useEffect","useState","useMoralis","useMoralisWeb3Api","useERC20Balance","params","account","isInitialized","chainId","walletAddress","assets","setAssets","fetchERC20Balance","then","balance","getTokenBalances","address","chain","result"],"mappings":"yXAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,UAAT,CAAqBC,iBAArB,KAA8C,eAA9C,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,MAAD,CAAY,CACzC,uBAAoBF,iBAAiB,EAArC,CAAQG,OAAR,oBAAQA,OAAR,CACA,gBAA2DJ,UAAU,EAArE,CAAQK,aAAR,aAAQA,aAAR,CAAuBC,OAAvB,aAAuBA,OAAvB,CAAyCC,aAAzC,aAAgCH,OAAhC,CAEA,cAA4BL,QAAQ,EAApC,wCAAOS,MAAP,eAAeC,SAAf,eAEAX,SAAS,CAAC,UAAM,CACd,GAAIO,aAAJ,CAAmB,CACjBK,iBAAiB,GAAGC,IAApB,CAAyB,SAACC,OAAD,QAAaH,CAAAA,SAAS,CAACG,OAAD,CAAtB,EAAzB,EACD,CACD;AACD,CALQ,CAKN,CAACP,aAAD,CAAgBC,OAAhB,CAAyBC,aAAzB,CALM,CAAT,CAOA,GAAMG,CAAAA,iBAAiB,0FAAG,yJACXN,CAAAA,OAAO,CACjBS,gBADU,CACO,CAChBC,OAAO,CAAEP,aADO,CAEhBQ,KAAK,CAAE,CAAAZ,MAAM,OAAN,EAAAA,MAAM,SAAN,QAAAA,MAAM,CAAEY,KAAR,GAAiBT,OAFR,CADP,EAKVK,IALU,CAKL,SAACK,MAAD,QAAYA,CAAAA,MAAZ,EALK,CADW,6GAAH,kBAAjBN,CAAAA,iBAAiB,0CAAvB,CASA,MAAO,CAAEA,iBAAiB,CAAjBA,iBAAF,CAAqBF,MAAM,CAANA,MAArB,CAAP,CACD,CAvBM","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\r\n\r\nexport const useERC20Balance = (params) => {\r\n  const { account } = useMoralisWeb3Api();\r\n  const { isInitialized, chainId, account: walletAddress } = useMoralis();\r\n\r\n  const [assets, setAssets] = useState();\r\n\r\n  useEffect(() => {\r\n    if (isInitialized) {\r\n      fetchERC20Balance().then((balance) => setAssets(balance));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isInitialized, chainId, walletAddress]);\r\n\r\n  const fetchERC20Balance = async () => {\r\n    return await account\r\n      .getTokenBalances({\r\n        address: walletAddress,\r\n        chain: params?.chain || chainId,\r\n      })\r\n      .then((result) => result);\r\n  };\r\n\r\n  return { fetchERC20Balance, assets };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}