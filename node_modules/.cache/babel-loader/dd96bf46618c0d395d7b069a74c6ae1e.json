{"ast":null,"code":"var _jsxFileName = \"C:\\\\webgis\\\\newfold\\\\ethereum-boilerplate\\\\src\\\\components\\\\ERC20Balance.jsx\",\n    _s = $RefreshSig$();\n\nimport { useMoralis, useERC20Balances } from \"react-moralis\";\nimport { Skeleton, Table } from \"antd\";\nimport { getEllipsisTxt } from \"../helpers/formatters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ERC20Balance(props) {\n  _s();\n\n  const {\n    data: assets\n  } = useERC20Balances(props);\n  const {\n    Moralis\n  } = useMoralis();\n  const columns = [{\n    title: \"\",\n    dataIndex: \"logo\",\n    key: \"logo\",\n    render: logo => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo || \"https://etherscan.io/images/main/empty-token.png\",\n      alt: \"nologo\",\n      width: \"28px\",\n      height: \"28px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n    render: name => name\n  }, {\n    title: \"Symbol\",\n    dataIndex: \"symbol\",\n    key: \"symbol\",\n    render: symbol => symbol\n  }, {\n    title: \"Balance\",\n    dataIndex: \"balance\",\n    key: \"balance\",\n    render: (value, item) => {\n      var _Moralis$Units;\n\n      return parseFloat(Moralis === null || Moralis === void 0 ? void 0 : (_Moralis$Units = Moralis.Units) === null || _Moralis$Units === void 0 ? void 0 : _Moralis$Units.FromWei(value, item.decimals)).toFixed(6);\n    }\n  }, {\n    title: \"Address\",\n    dataIndex: \"token_address\",\n    key: \"token_address\",\n    render: address => getEllipsisTxt(address, 5)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"65vw\",\n      padding: \"15px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCB0Token Balances\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n      loading: !assets,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        dataSource: assets,\n        columns: columns,\n        rowKey: record => {\n          return record.token_address;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ERC20Balance, \"cSwIvbvQrcOzonWMDQpZEIHWZII=\", false, function () {\n  return [useERC20Balances, useMoralis];\n});\n\n_c = ERC20Balance;\nexport default ERC20Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"ERC20Balance\");","map":{"version":3,"sources":["C:/webgis/newfold/ethereum-boilerplate/src/components/ERC20Balance.jsx"],"names":["useMoralis","useERC20Balances","Skeleton","Table","getEllipsisTxt","ERC20Balance","props","data","assets","Moralis","columns","title","dataIndex","key","render","logo","name","symbol","value","item","parseFloat","Units","FromWei","decimals","toFixed","address","width","padding","record","token_address"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,gBAArB,QAA6C,eAA7C;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,MAAhC;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAmBP,gBAAgB,CAACK,KAAD,CAAzC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAcT,UAAU,EAA9B;AAEA,QAAMU,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,EADT;AAEEC,IAAAA,SAAS,EAAE,MAFb;AAGEC,IAAAA,GAAG,EAAE,MAHP;AAIEC,IAAAA,MAAM,EAAGC,IAAD,iBACN;AACE,MAAA,GAAG,EAAEA,IAAI,IAAI,kDADf;AAEE,MAAA,GAAG,EAAC,QAFN;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AALJ,GADc,EAcd;AACEJ,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,MAFb;AAGEC,IAAAA,GAAG,EAAE,MAHP;AAIEC,IAAAA,MAAM,EAAGE,IAAD,IAAUA;AAJpB,GAdc,EAoBd;AACEL,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,SAAS,EAAE,QAFb;AAGEC,IAAAA,GAAG,EAAE,QAHP;AAIEC,IAAAA,MAAM,EAAGG,MAAD,IAAYA;AAJtB,GApBc,EA0Bd;AACEN,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE,SAHP;AAIEC,IAAAA,MAAM,EAAE,CAACI,KAAD,EAAQC,IAAR;AAAA;;AAAA,aACNC,UAAU,CAACX,OAAD,aAACA,OAAD,yCAACA,OAAO,CAAEY,KAAV,mDAAC,eAAgBC,OAAhB,CAAwBJ,KAAxB,EAA+BC,IAAI,CAACI,QAApC,CAAD,CAAV,CAA0DC,OAA1D,CAAkE,CAAlE,CADM;AAAA;AAJV,GA1Bc,EAiCd;AACEb,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,SAAS,EAAE,eAFb;AAGEC,IAAAA,GAAG,EAAE,eAHP;AAIEC,IAAAA,MAAM,EAAGW,OAAD,IAAarB,cAAc,CAACqB,OAAD,EAAU,CAAV;AAJrC,GAjCc,CAAhB;AAyCA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAAZ;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,OAAO,EAAE,CAACnB,MAApB;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,UAAU,EAAEA,MADd;AAEE,QAAA,OAAO,EAAEE,OAFX;AAGE,QAAA,MAAM,EAAGkB,MAAD,IAAY;AAClB,iBAAOA,MAAM,CAACC,aAAd;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA3DQxB,Y;UACkBJ,gB,EACLD,U;;;KAFbK,Y;AA4DT,eAAeA,YAAf","sourcesContent":["import { useMoralis, useERC20Balances } from \"react-moralis\";\r\nimport { Skeleton, Table } from \"antd\";\r\nimport { getEllipsisTxt } from \"../helpers/formatters\";\r\n\r\nfunction ERC20Balance(props) {\r\n  const { data: assets } = useERC20Balances(props);\r\n  const { Moralis } = useMoralis();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"\",\r\n      dataIndex: \"logo\",\r\n      key: \"logo\",\r\n      render: (logo) => (\r\n        <img\r\n          src={logo || \"https://etherscan.io/images/main/empty-token.png\"}\r\n          alt=\"nologo\"\r\n          width=\"28px\"\r\n          height=\"28px\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (name) => name,\r\n    },\r\n    {\r\n      title: \"Symbol\",\r\n      dataIndex: \"symbol\",\r\n      key: \"symbol\",\r\n      render: (symbol) => symbol,\r\n    },\r\n    {\r\n      title: \"Balance\",\r\n      dataIndex: \"balance\",\r\n      key: \"balance\",\r\n      render: (value, item) =>\r\n        parseFloat(Moralis?.Units?.FromWei(value, item.decimals)).toFixed(6),\r\n    },\r\n    {\r\n      title: \"Address\",\r\n      dataIndex: \"token_address\",\r\n      key: \"token_address\",\r\n      render: (address) => getEllipsisTxt(address, 5),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ width: \"65vw\", padding: \"15px\" }}>\r\n      <h1>ðŸ’°Token Balances</h1>\r\n      <Skeleton loading={!assets}>\r\n        <Table\r\n          dataSource={assets}\r\n          columns={columns}\r\n          rowKey={(record) => {\r\n            return record.token_address;\r\n          }}\r\n        />\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n}\r\nexport default ERC20Balance;\r\n"]},"metadata":{},"sourceType":"module"}