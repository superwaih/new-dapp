{"ast":null,"code":"var _jsxFileName = \"C:\\\\webgis\\\\newfold\\\\ethereum-boilerplate\\\\src\\\\components\\\\Wallet\\\\components\\\\Transfer.jsx\",\n    _s = $RefreshSig$();\n\nimport { CreditCardOutlined } from \"@ant-design/icons\";\nimport { Button, Input, notification } from \"antd\";\nimport Text from \"antd/lib/typography/Text\";\nimport { useEffect, useState } from \"react\";\nimport { useMoralis } from \"react-moralis\";\nimport AddressInput from \"../../AddressInput\";\nimport AssetSelector from \"./AssetSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  card: {\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  header: {\n    textAlign: \"center\"\n  },\n  input: {\n    width: \"100%\",\n    outline: \"none\",\n    fontSize: \"16px\",\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textverflow: \"ellipsis\",\n    appearance: \"textfield\",\n    color: \"#041836\",\n    fontWeight: \"700\",\n    border: \"none\",\n    backgroundColor: \"transparent\"\n  },\n  select: {\n    marginTop: \"20px\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  textWrapper: {\n    maxWidth: \"80px\",\n    width: \"100%\"\n  },\n  row: {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"10px\",\n    flexDirection: \"row\"\n  }\n};\n\nfunction Transfer() {\n  _s();\n\n  const {\n    Moralis\n  } = useMoralis();\n  const [receiver, setReceiver] = useState();\n  const [asset, setAsset] = useState();\n  const [tx, setTx] = useState();\n  const [amount, setAmount] = useState();\n  const [isPending, setIsPending] = useState(false);\n  useEffect(() => {\n    asset && amount && receiver ? setTx({\n      amount,\n      receiver,\n      asset\n    }) : setTx();\n  }, [asset, amount, receiver]);\n\n  const openNotification = _ref => {\n    let {\n      message,\n      description\n    } = _ref;\n    notification.open({\n      placement: \"bottomRight\",\n      message,\n      description,\n      onClick: () => {\n        console.log(\"Notification Clicked!\");\n      }\n    });\n  };\n\n  async function transfer() {\n    const {\n      amount,\n      receiver,\n      asset\n    } = tx;\n    let options = {};\n\n    switch (asset.token_address) {\n      case \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\":\n        options = {\n          native: \"native\",\n          amount: Moralis.Units.ETH(amount),\n          receiver,\n          awaitReceipt: false\n        };\n        break;\n\n      default:\n        options = {\n          type: \"erc20\",\n          amount: Moralis.Units.Token(amount, asset.decimals),\n          receiver,\n          contractAddress: asset.token_address,\n          awaitReceipt: false\n        };\n    }\n\n    setIsPending(true);\n    const txStatus = await Moralis.transfer(options);\n    txStatus.on(\"transactionHash\", hash => {\n      openNotification({\n        message: \"ðŸ”Š New Transaction\",\n        description: `${hash}`\n      });\n      console.log(\"ðŸ”Š New Transaction\", hash);\n    }).on(\"receipt\", receipt => {\n      openNotification({\n        message: \"ðŸ“ƒ New Receipt\",\n        description: `${receipt.transactionHash}`\n      });\n      console.log(\"ðŸ”Š New Receipt: \", receipt);\n      setIsPending(false);\n    }).on(\"error\", error => {\n      openNotification({\n        message: \"ðŸ“ƒ Error\",\n        description: `${error.message}`\n      });\n      console.error(error);\n      setIsPending(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.card,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.tranfer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.header,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Transfer Assets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.select,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.textWrapper,\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            strong: true,\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddressInput, {\n          autoFocus: true,\n          onChange: setReceiver\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.select,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.textWrapper,\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            strong: true,\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          size: \"large\",\n          prefix: /*#__PURE__*/_jsxDEV(CreditCardOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this),\n          onChange: e => {\n            setAmount(`${e.target.value}`);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.select,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.textWrapper,\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            strong: true,\n            children: \"Asset:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AssetSelector, {\n          setAsset: setAsset,\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        size: \"large\",\n        loading: isPending,\n        style: {\n          width: \"100%\",\n          marginTop: \"25px\"\n        },\n        onClick: () => transfer(),\n        disabled: !tx,\n        children: \"Transfer\\uD83D\\uDCB8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Transfer, \"LW/y5SqbMJ1AMVvwfhyF5DNoXAE=\", false, function () {\n  return [useMoralis];\n});\n\n_c = Transfer;\nexport default Transfer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"sources":["C:/webgis/newfold/ethereum-boilerplate/src/components/Wallet/components/Transfer.jsx"],"names":["CreditCardOutlined","Button","Input","notification","Text","useEffect","useState","useMoralis","AddressInput","AssetSelector","styles","card","alignItems","width","header","textAlign","input","outline","fontSize","whiteSpace","overflow","textverflow","appearance","color","fontWeight","border","backgroundColor","select","marginTop","display","textWrapper","maxWidth","row","gap","flexDirection","Transfer","Moralis","receiver","setReceiver","asset","setAsset","tx","setTx","amount","setAmount","isPending","setIsPending","openNotification","message","description","open","placement","onClick","console","log","transfer","options","token_address","native","Units","ETH","awaitReceipt","type","Token","decimals","contractAddress","txStatus","on","hash","receipt","transactionHash","error","tranfer","e","target","value"],"mappings":"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","sourcesContent":["import { CreditCardOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input, notification } from \"antd\";\r\nimport Text from \"antd/lib/typography/Text\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport AddressInput from \"../../AddressInput\";\r\nimport AssetSelector from \"./AssetSelector\";\r\n\r\nconst styles = {\r\n  card: {\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  header: {\r\n    textAlign: \"center\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    outline: \"none\",\r\n    fontSize: \"16px\",\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    textverflow: \"ellipsis\",\r\n    appearance: \"textfield\",\r\n    color: \"#041836\",\r\n    fontWeight: \"700\",\r\n    border: \"none\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  select: {\r\n    marginTop: \"20px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  textWrapper: { maxWidth: \"80px\", width: \"100%\" },\r\n  row: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    gap: \"10px\",\r\n    flexDirection: \"row\",\r\n  },\r\n};\r\n\r\nfunction Transfer() {\r\n  const { Moralis } = useMoralis();\r\n  const [receiver, setReceiver] = useState();\r\n  const [asset, setAsset] = useState();\r\n  const [tx, setTx] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [isPending, setIsPending] = useState(false);\r\n\r\n  useEffect(() => {\r\n    asset && amount && receiver ? setTx({ amount, receiver, asset }) : setTx();\r\n  }, [asset, amount, receiver]);\r\n\r\n  const openNotification = ({ message, description }) => {\r\n    notification.open({\r\n      placement: \"bottomRight\",\r\n      message,\r\n      description,\r\n      onClick: () => {\r\n        console.log(\"Notification Clicked!\");\r\n      },\r\n    });\r\n  };\r\n\r\n  async function transfer() {\r\n    const { amount, receiver, asset } = tx;\r\n\r\n    let options = {};\r\n\r\n    switch (asset.token_address) {\r\n      case \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\":\r\n        options = {\r\n          native: \"native\",\r\n          amount: Moralis.Units.ETH(amount),\r\n          receiver,\r\n          awaitReceipt: false,\r\n        };\r\n        break;\r\n      default:\r\n        options = {\r\n          type: \"erc20\",\r\n          amount: Moralis.Units.Token(amount, asset.decimals),\r\n          receiver,\r\n          contractAddress: asset.token_address,\r\n          awaitReceipt: false,\r\n        };\r\n    }\r\n\r\n    setIsPending(true);\r\n    const txStatus = await Moralis.transfer(options);\r\n\r\n    txStatus\r\n      .on(\"transactionHash\", (hash) => {\r\n        openNotification({\r\n          message: \"ðŸ”Š New Transaction\",\r\n          description: `${hash}`,\r\n        });\r\n        console.log(\"ðŸ”Š New Transaction\", hash);\r\n      })\r\n      .on(\"receipt\", (receipt) => {\r\n        openNotification({\r\n          message: \"ðŸ“ƒ New Receipt\",\r\n          description: `${receipt.transactionHash}`,\r\n        });\r\n        console.log(\"ðŸ”Š New Receipt: \", receipt);\r\n        setIsPending(false);\r\n      })\r\n      .on(\"error\", (error) => {\r\n        openNotification({\r\n          message: \"ðŸ“ƒ Error\",\r\n          description: `${error.message}`,\r\n        });\r\n        console.error(error);\r\n        setIsPending(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div style={styles.card}>\r\n      <div style={styles.tranfer}>\r\n        <div style={styles.header}>\r\n          <h3>Transfer Assets</h3>\r\n        </div>\r\n        <div style={styles.select}>\r\n          <div style={styles.textWrapper}>\r\n            <Text strong>Address:</Text>\r\n          </div>\r\n          <AddressInput autoFocus onChange={setReceiver} />\r\n        </div>\r\n        <div style={styles.select}>\r\n          <div style={styles.textWrapper}>\r\n            <Text strong>Amount:</Text>\r\n          </div>\r\n          <Input\r\n            size=\"large\"\r\n            prefix={<CreditCardOutlined />}\r\n            onChange={(e) => {\r\n              setAmount(`${e.target.value}`);\r\n            }}\r\n          />\r\n        </div>\r\n        <div style={styles.select}>\r\n          <div style={styles.textWrapper}>\r\n            <Text strong>Asset:</Text>\r\n          </div>\r\n          <AssetSelector setAsset={setAsset} style={{ width: \"100%\" }} />\r\n        </div>\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          loading={isPending}\r\n          style={{ width: \"100%\", marginTop: \"25px\" }}\r\n          onClick={() => transfer()}\r\n          disabled={!tx}\r\n        >\r\n          TransferðŸ’¸\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Transfer;\r\n"]},"metadata":{},"sourceType":"module"}