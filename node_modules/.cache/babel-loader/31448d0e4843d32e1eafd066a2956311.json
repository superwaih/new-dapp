{"ast":null,"code":"var _jsxFileName = \"C:\\\\webgis\\\\newfold\\\\ethereum-boilerplate\\\\src\\\\components\\\\Blockie.jsx\",\n    _s = $RefreshSig$();\n\nimport { Skeleton } from \"antd\";\nimport Blockies from \"react-blockies\";\nimport { useMoralis } from \"react-moralis\";\n/**\r\n * Shows a blockie image for the provided wallet address\r\n * @param {*} props\r\n * @returns <Blockies> JSX Elemenet\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Blockie(props) {\n  _s();\n\n  const {\n    account,\n    isAuthenticated\n  } = useMoralis();\n  if (!props.address && (!account || !isAuthenticated)) return /*#__PURE__*/_jsxDEV(Skeleton.Avatar, {\n    active: true,\n    size: 40\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Blockies, {\n    seed: props.currentWallet ? account.toLowerCase() : props.address.toLowerCase(),\n    className: \"identicon\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Blockie, \"SgdL8S5VwxDpEOvM4uEQQBCsF24=\", false, function () {\n  return [useMoralis];\n});\n\n_c = Blockie;\nexport default Blockie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blockie\");","map":{"version":3,"sources":["C:/webgis/newfold/ethereum-boilerplate/src/components/Blockie.jsx"],"names":["Skeleton","Blockies","useMoralis","Blockie","props","account","isAuthenticated","address","currentWallet","toLowerCase"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,MAAzB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA+BJ,UAAU,EAA/C;AACA,MAAI,CAACE,KAAK,CAACG,OAAP,KAAmB,CAACF,OAAD,IAAY,CAACC,eAAhC,CAAJ,EACE,oBAAO,QAAC,QAAD,CAAU,MAAV;AAAiB,IAAA,MAAM,MAAvB;AAAwB,IAAA,IAAI,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AAEF,sBACE,QAAC,QAAD;AACE,IAAA,IAAI,EACFF,KAAK,CAACI,aAAN,GACIH,OAAO,CAACI,WAAR,EADJ,GAEIL,KAAK,CAACG,OAAN,CAAcE,WAAd,EAJR;AAME,IAAA,SAAS,EAAC,WANZ;AAAA,OAOML;AAPN;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAhBQD,O;UAC8BD,U;;;KAD9BC,O;AAkBT,eAAeA,OAAf","sourcesContent":["import { Skeleton } from \"antd\";\r\nimport Blockies from \"react-blockies\";\r\nimport { useMoralis } from \"react-moralis\";\r\n\r\n/**\r\n * Shows a blockie image for the provided wallet address\r\n * @param {*} props\r\n * @returns <Blockies> JSX Elemenet\r\n */\r\n\r\nfunction Blockie(props) {\r\n  const { account, isAuthenticated } = useMoralis();\r\n  if (!props.address && (!account || !isAuthenticated))\r\n    return <Skeleton.Avatar active size={40} />;\r\n\r\n  return (\r\n    <Blockies\r\n      seed={\r\n        props.currentWallet\r\n          ? account.toLowerCase()\r\n          : props.address.toLowerCase()\r\n      }\r\n      className=\"identicon\"\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Blockie;\r\n"]},"metadata":{},"sourceType":"module"}