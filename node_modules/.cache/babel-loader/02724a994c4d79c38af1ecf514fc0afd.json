{"ast":null,"code":"var _jsxFileName = \"C:\\\\webgis\\\\newfold\\\\dapp-project\\\\src\\\\components\\\\Contract\\\\ContractMethods.jsx\";\nimport { Button, Card, Form, Input } from \"antd\";\nimport Text from \"antd/lib/typography/Text\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContractMethods = _ref => {\n  let {\n    displayedContractFunctions,\n    responses\n  } = _ref;\n  return displayedContractFunctions.map((item, key) => {\n    var _responses$item$name, _responses$item$name2, _responses$item$name3;\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: `${key + 1}. ${item === null || item === void 0 ? void 0 : item.name}`,\n      size: \"small\",\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"vertical\",\n        name: `${item.name}`,\n        children: [item.inputs.map((input, key) => /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: `${input.name} (${input.type})`,\n          name: `${input.name}`,\n          required: true,\n          style: {\n            marginBottom: \"15px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"input placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n          style: {\n            marginBottom: \"5px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: {\n              display: \"block\"\n            },\n            children: ((_responses$item$name = responses[item.name]) === null || _responses$item$name === void 0 ? void 0 : _responses$item$name.result) && `Response: ${JSON.stringify((_responses$item$name2 = responses[item.name]) === null || _responses$item$name2 === void 0 ? void 0 : _responses$item$name2.result)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            loading: (_responses$item$name3 = responses[item === null || item === void 0 ? void 0 : item.name]) === null || _responses$item$name3 === void 0 ? void 0 : _responses$item$name3.isLoading,\n            children: item.stateMutability === \"view\" ? \"ReadðŸ”Ž\" : \"TransactðŸ’¸\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this);\n  });\n};\n\n_c = ContractMethods;\nexport default ContractMethods;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractMethods\");","map":{"version":3,"sources":["C:/webgis/newfold/dapp-project/src/components/Contract/ContractMethods.jsx"],"names":["Button","Card","Form","Input","Text","ContractMethods","displayedContractFunctions","responses","map","item","key","name","marginBottom","inputs","input","type","display","result","JSON","stringify","isLoading","stateMutability"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,KAA7B,QAA0C,MAA1C;AACA,OAAOC,IAAP,MAAiB,0BAAjB;;;AAEA,MAAMC,eAAe,GAAG,QAA+C;AAAA,MAA9C;AAAEC,IAAAA,0BAAF;AAA8BC,IAAAA;AAA9B,GAA8C;AACrE,SAAOD,0BAA0B,CAACE,GAA3B,CAA+B,CAACC,IAAD,EAAOC,GAAP;AAAA;;AAAA,wBACpC,QAAC,IAAD;AACE,MAAA,KAAK,EAAG,GAAEA,GAAG,GAAG,CAAE,KAAID,IAAf,aAAeA,IAAf,uBAAeA,IAAI,CAAEE,IAAK,EADnC;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAHT;AAAA,6BAME,QAAC,IAAD;AAAM,QAAA,MAAM,EAAC,UAAb;AAAwB,QAAA,IAAI,EAAG,GAAEH,IAAI,CAACE,IAAK,EAA3C;AAAA,mBACGF,IAAI,CAACI,MAAL,CAAYL,GAAZ,CAAgB,CAACM,KAAD,EAAQJ,GAAR,kBACf,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,KAAK,EAAG,GAAEI,KAAK,CAACH,IAAK,KAAIG,KAAK,CAACC,IAAK,GADtC;AAEE,UAAA,IAAI,EAAG,GAAED,KAAK,CAACH,IAAK,EAFtB;AAGE,UAAA,QAAQ,MAHV;AAIE,UAAA,KAAK,EAAE;AAAEC,YAAAA,YAAY,EAAE;AAAhB,WAJT;AAAA,iCAOE,QAAC,KAAD;AAAO,YAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAPF,WAKOF,GALP;AAAA;AAAA;AAAA;AAAA,gBADD,CADH,eAYE,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAE;AAAEE,YAAAA,YAAY,EAAE;AAAhB,WAAlB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAAb;AAAA,sBACG,yBAAAT,SAAS,CAACE,IAAI,CAACE,IAAN,CAAT,8EAAsBM,MAAtB,KACE,aAAYC,IAAI,CAACC,SAAL,0BAAeZ,SAAS,CAACE,IAAI,CAACE,IAAN,CAAxB,0DAAe,sBAAsBM,MAArC,CAA6C;AAF9D;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,SADP;AAEE,YAAA,QAAQ,EAAC,QAFX;AAGE,YAAA,OAAO,2BAAEV,SAAS,CAACE,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEE,IAAP,CAAX,0DAAE,sBAAuBS,SAHlC;AAAA,sBAKGX,IAAI,CAACY,eAAL,KAAyB,MAAzB,GAAkC,QAAlC,GAA6C;AALhD;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF,OAIOX,GAJP;AAAA;AAAA;AAAA;AAAA,YADoC;AAAA,GAA/B,CAAP;AAmCD,CApCD;;KAAML,e;AAsCN,eAAeA,eAAf","sourcesContent":["import { Button, Card, Form, Input } from \"antd\";\r\nimport Text from \"antd/lib/typography/Text\";\r\n\r\nconst ContractMethods = ({ displayedContractFunctions, responses }) => {\r\n  return displayedContractFunctions.map((item, key) => (\r\n    <Card\r\n      title={`${key + 1}. ${item?.name}`}\r\n      size=\"small\"\r\n      style={{ marginBottom: \"20px\" }}\r\n      key={key}\r\n    >\r\n      <Form layout=\"vertical\" name={`${item.name}`}>\r\n        {item.inputs.map((input, key) => (\r\n          <Form.Item\r\n            label={`${input.name} (${input.type})`}\r\n            name={`${input.name}`}\r\n            required\r\n            style={{ marginBottom: \"15px\" }}\r\n            key={key}\r\n          >\r\n            <Input placeholder=\"input placeholder\" />\r\n          </Form.Item>\r\n        ))}\r\n        <Form.Item style={{ marginBottom: \"5px\" }}>\r\n          <Text style={{ display: \"block\" }}>\r\n            {responses[item.name]?.result &&\r\n              `Response: ${JSON.stringify(responses[item.name]?.result)}`}\r\n          </Text>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            loading={responses[item?.name]?.isLoading}\r\n          >\r\n            {item.stateMutability === \"view\" ? \"ReadðŸ”Ž\" : \"TransactðŸ’¸\"}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  ));\r\n};\r\n\r\nexport default ContractMethods;\r\n"]},"metadata":{},"sourceType":"module"}