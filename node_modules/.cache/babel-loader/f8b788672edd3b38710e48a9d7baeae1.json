{"ast":null,"code":"import{Button,Card,Form,Input}from\"antd\";import Text from\"antd/lib/typography/Text\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContractMethods=function ContractMethods(_ref){var displayedContractFunctions=_ref.displayedContractFunctions,responses=_ref.responses;return displayedContractFunctions.map(function(item,key){var _responses$item$name,_responses$item$name2,_responses$item$name3;return/*#__PURE__*/_jsx(Card,{title:\"\".concat(key+1,\". \").concat(item===null||item===void 0?void 0:item.name),size:\"small\",style:{marginBottom:\"20px\"},children:/*#__PURE__*/_jsxs(Form,{layout:\"vertical\",name:\"\".concat(item.name),children:[item.inputs.map(function(input,key){return/*#__PURE__*/_jsx(Form.Item,{label:\"\".concat(input.name,\" (\").concat(input.type,\")\"),name:\"\".concat(input.name),required:true,style:{marginBottom:\"15px\"},children:/*#__PURE__*/_jsx(Input,{placeholder:\"input placeholder\"})},key);}),/*#__PURE__*/_jsxs(Form.Item,{style:{marginBottom:\"5px\"},children:[/*#__PURE__*/_jsx(Text,{style:{display:\"block\"},children:((_responses$item$name=responses[item.name])===null||_responses$item$name===void 0?void 0:_responses$item$name.result)&&\"Response: \".concat(JSON.stringify((_responses$item$name2=responses[item.name])===null||_responses$item$name2===void 0?void 0:_responses$item$name2.result))}),/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",loading:(_responses$item$name3=responses[item===null||item===void 0?void 0:item.name])===null||_responses$item$name3===void 0?void 0:_responses$item$name3.isLoading,children:item.stateMutability===\"view\"?\"ReadðŸ”Ž\":\"TransactðŸ’¸\"})]})]})},key);});};export default ContractMethods;","map":{"version":3,"sources":["C:/webgis/newfold/dapp-project/src/components/Contract/ContractMethods.jsx"],"names":["Button","Card","Form","Input","Text","ContractMethods","displayedContractFunctions","responses","map","item","key","name","marginBottom","inputs","input","type","display","result","JSON","stringify","isLoading","stateMutability"],"mappings":"AAAA,OAASA,MAAT,CAAiBC,IAAjB,CAAuBC,IAAvB,CAA6BC,KAA7B,KAA0C,MAA1C,CACA,MAAOC,CAAAA,IAAP,KAAiB,0BAAjB,C,wFAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAA+C,IAA5CC,CAAAA,0BAA4C,MAA5CA,0BAA4C,CAAhBC,SAAgB,MAAhBA,SAAgB,CACrE,MAAOD,CAAAA,0BAA0B,CAACE,GAA3B,CAA+B,SAACC,IAAD,CAAOC,GAAP,0FACpC,KAAC,IAAD,EACE,KAAK,WAAKA,GAAG,CAAG,CAAX,cAAiBD,IAAjB,SAAiBA,IAAjB,iBAAiBA,IAAI,CAAEE,IAAvB,CADP,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAE,CAAEC,YAAY,CAAE,MAAhB,CAHT,uBAME,MAAC,IAAD,EAAM,MAAM,CAAC,UAAb,CAAwB,IAAI,WAAKH,IAAI,CAACE,IAAV,CAA5B,WACGF,IAAI,CAACI,MAAL,CAAYL,GAAZ,CAAgB,SAACM,KAAD,CAAQJ,GAAR,qBACf,KAAC,IAAD,CAAM,IAAN,EACE,KAAK,WAAKI,KAAK,CAACH,IAAX,cAAoBG,KAAK,CAACC,IAA1B,KADP,CAEE,IAAI,WAAKD,KAAK,CAACH,IAAX,CAFN,CAGE,QAAQ,KAHV,CAIE,KAAK,CAAE,CAAEC,YAAY,CAAE,MAAhB,CAJT,uBAOE,KAAC,KAAD,EAAO,WAAW,CAAC,mBAAnB,EAPF,EAKOF,GALP,CADe,EAAhB,CADH,cAYE,MAAC,IAAD,CAAM,IAAN,EAAW,KAAK,CAAE,CAAEE,YAAY,CAAE,KAAhB,CAAlB,wBACE,KAAC,IAAD,EAAM,KAAK,CAAE,CAAEI,OAAO,CAAE,OAAX,CAAb,UACG,uBAAAT,SAAS,CAACE,IAAI,CAACE,IAAN,CAAT,oEAAsBM,MAAtB,uBACcC,IAAI,CAACC,SAAL,wBAAeZ,SAAS,CAACE,IAAI,CAACE,IAAN,CAAxB,gDAAe,sBAAsBM,MAArC,CADd,CADH,EADF,cAKE,KAAC,MAAD,EACE,IAAI,CAAC,SADP,CAEE,QAAQ,CAAC,QAFX,CAGE,OAAO,wBAAEV,SAAS,CAACE,IAAD,SAACA,IAAD,iBAACA,IAAI,CAAEE,IAAP,CAAX,gDAAE,sBAAuBS,SAHlC,UAKGX,IAAI,CAACY,eAAL,GAAyB,MAAzB,CAAkC,QAAlC,CAA6C,YALhD,EALF,GAZF,GANF,EAIOX,GAJP,CADoC,EAA/B,CAAP,CAmCD,CApCD,CAsCA,cAAeL,CAAAA,eAAf","sourcesContent":["import { Button, Card, Form, Input } from \"antd\";\r\nimport Text from \"antd/lib/typography/Text\";\r\n\r\nconst ContractMethods = ({ displayedContractFunctions, responses }) => {\r\n  return displayedContractFunctions.map((item, key) => (\r\n    <Card\r\n      title={`${key + 1}. ${item?.name}`}\r\n      size=\"small\"\r\n      style={{ marginBottom: \"20px\" }}\r\n      key={key}\r\n    >\r\n      <Form layout=\"vertical\" name={`${item.name}`}>\r\n        {item.inputs.map((input, key) => (\r\n          <Form.Item\r\n            label={`${input.name} (${input.type})`}\r\n            name={`${input.name}`}\r\n            required\r\n            style={{ marginBottom: \"15px\" }}\r\n            key={key}\r\n          >\r\n            <Input placeholder=\"input placeholder\" />\r\n          </Form.Item>\r\n        ))}\r\n        <Form.Item style={{ marginBottom: \"5px\" }}>\r\n          <Text style={{ display: \"block\" }}>\r\n            {responses[item.name]?.result &&\r\n              `Response: ${JSON.stringify(responses[item.name]?.result)}`}\r\n          </Text>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            loading={responses[item?.name]?.isLoading}\r\n          >\r\n            {item.stateMutability === \"view\" ? \"ReadðŸ”Ž\" : \"TransactðŸ’¸\"}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  ));\r\n};\r\n\r\nexport default ContractMethods;\r\n"]},"metadata":{},"sourceType":"module"}