{"ast":null,"code":"var _jsxFileName = \"C:\\\\webgis\\\\newfold\\\\dapp-project\\\\src\\\\components\\\\Address\\\\Address.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { getEllipsisTxt } from \"../../helpers/formatters\";\nimport Blockie from \"../Blockie\";\nimport \"./identicon.css\";\nimport { useMoralis } from \"react-moralis\";\nimport { Skeleton } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  address: {\n    height: \"36px\",\n    display: \"flex\",\n    gap: \"5px\",\n    backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n    borderRadius: \"9px\",\n    alignItems: \"center\"\n  }\n};\n\nfunction Address(props) {\n  _s();\n\n  const {\n    account,\n    isAuthenticated\n  } = useMoralis();\n  const [address, setAddress] = useState();\n  const [isClicked, setIsClicked] = useState(false);\n  useEffect(() => {\n    setAddress((props === null || props === void 0 ? void 0 : props.address) || isAuthenticated && account);\n  }, [account, isAuthenticated, props]);\n  if (!address) return /*#__PURE__*/_jsxDEV(Skeleton, {\n    paragraph: {\n      rows: 1,\n      width: \"100%\"\n    },\n    title: false,\n    active: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n\n  const Copy = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"26\",\n    height: \"26\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: \"2\",\n    stroke: \"#1780FF\",\n    fill: \"none\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: () => {\n      navigator.clipboard.writeText(address);\n      setIsClicked(true);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      stroke: \"none\",\n      d: \"M0 0h24v24H0z\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M15 3v4a1 1 0 0 0 1 1h4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M18 17h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h4l5 5v7a2 2 0 0 1 -2 2z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M16 17v2a2 2 0 0 1 -2 2h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n      id: \"copy-address\",\n      children: \"Copy Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: { ...styles.address,\n      ...props.style\n    },\n    children: [props.avatar === \"left\" && /*#__PURE__*/_jsxDEV(Blockie, {\n      address: address,\n      size: 7\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.size ? getEllipsisTxt(address, props.size) : address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), props.avatar === \"right\" && /*#__PURE__*/_jsxDEV(Blockie, {\n      address: address,\n      size: 7\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 36\n    }, this), props.copyable && (isClicked ? /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(Copy, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 51\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Address, \"9vJA9jftnlShOAfRPvUTCC26PGw=\", false, function () {\n  return [useMoralis];\n});\n\n_c = Address;\nexport default Address;\n\nconst Check = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  width: \"24\",\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  strokeWidth: \"3\",\n  stroke: \"#21BF96\",\n  fill: \"none\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n    stroke: \"none\",\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M5 12l5 5l10 -10\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n    id: \"copied-address\",\n    children: \"Copied!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 72,\n  columnNumber: 3\n}, this);\n\n_c2 = Check;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Address\");\n$RefreshReg$(_c2, \"Check\");","map":{"version":3,"sources":["C:/webgis/newfold/dapp-project/src/components/Address/Address.jsx"],"names":["useEffect","useState","getEllipsisTxt","Blockie","useMoralis","Skeleton","styles","address","height","display","gap","backgroundColor","borderRadius","alignItems","Address","props","account","isAuthenticated","setAddress","isClicked","setIsClicked","rows","width","Copy","cursor","navigator","clipboard","writeText","style","avatar","size","copyable","Check"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { getEllipsisTxt } from \"../../helpers/formatters\";\r\nimport Blockie from \"../Blockie\";\r\nimport \"./identicon.css\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nconst styles = {\r\n  address: {\r\n    height: \"36px\",\r\n    display: \"flex\",\r\n    gap: \"5px\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.1)\",\r\n    borderRadius: \"9px\",\r\n    alignItems: \"center\",\r\n  },\r\n};\r\n\r\nfunction Address(props) {\r\n  const { account, isAuthenticated } = useMoralis();\r\n  const [address, setAddress] = useState();\r\n  const [isClicked, setIsClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setAddress(props?.address || (isAuthenticated && account));\r\n  }, [account, isAuthenticated, props]);\r\n\r\n  if (!address)\r\n    return (\r\n      <Skeleton paragraph={{ rows: 1, width: \"100%\" }} title={false} active />\r\n    );\r\n\r\n  const Copy = () => (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"26\"\r\n      height=\"26\"\r\n      viewBox=\"0 0 24 24\"\r\n      strokeWidth=\"2\"\r\n      stroke=\"#1780FF\"\r\n      fill=\"none\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      style={{ cursor: \"pointer\" }}\r\n      onClick={() => {\r\n        navigator.clipboard.writeText(address);\r\n        setIsClicked(true);\r\n      }}\r\n    >\r\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n      <path d=\"M15 3v4a1 1 0 0 0 1 1h4\" />\r\n      <path d=\"M18 17h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h4l5 5v7a2 2 0 0 1 -2 2z\" />\r\n      <path d=\"M16 17v2a2 2 0 0 1 -2 2h-7a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2\" />\r\n      <title id=\"copy-address\">Copy Address</title>\r\n    </svg>\r\n  );\r\n\r\n  return (\r\n    <div style={{ ...styles.address, ...props.style }}>\r\n      {props.avatar === \"left\" && <Blockie address={address} size={7} />}\r\n      <p>{props.size ? getEllipsisTxt(address, props.size) : address}</p>\r\n      {props.avatar === \"right\" && <Blockie address={address} size={7} />}\r\n      {props.copyable && (isClicked ? <Check /> : <Copy />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Address;\r\n\r\nconst Check = () => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    strokeWidth=\"3\"\r\n    stroke=\"#21BF96\"\r\n    fill=\"none\"\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n  >\r\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n    <path d=\"M5 12l5 5l10 -10\" />\r\n    <title id=\"copied-address\">Copied!</title>\r\n  </svg>\r\n);\r\n"]},"metadata":{},"sourceType":"module"}