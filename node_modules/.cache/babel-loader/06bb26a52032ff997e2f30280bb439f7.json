{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\webgis\\\\newfold\\\\dapp-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\webgis\\\\newfold\\\\dapp-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\webgis\\\\newfold\\\\dapp-project\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{CreditCardOutlined}from\"@ant-design/icons\";import{Button,Input,notification}from\"antd\";import Text from\"antd/lib/typography/Text\";import{useEffect,useState}from\"react\";import{useMoralis}from\"react-moralis\";import AddressInput from\"../../AddressInput\";import AssetSelector from\"./AssetSelector\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var styles={card:{alignItems:\"center\",width:\"100%\"},header:{textAlign:\"center\"},input:{width:\"100%\",outline:\"none\",fontSize:\"16px\",whiteSpace:\"nowrap\",overflow:\"hidden\",textverflow:\"ellipsis\",appearance:\"textfield\",color:\"#041836\",fontWeight:\"700\",border:\"none\",backgroundColor:\"transparent\"},select:{marginTop:\"20px\",display:\"flex\",alignItems:\"center\"},textWrapper:{maxWidth:\"80px\",width:\"100%\"},row:{display:\"flex\",alignItems:\"center\",gap:\"10px\",flexDirection:\"row\"}};function Transfer(){var _useMoralis=useMoralis(),Moralis=_useMoralis.Moralis;var _useState=useState(),_useState2=_slicedToArray(_useState,2),receiver=_useState2[0],setReceiver=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),asset=_useState4[0],setAsset=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),tx=_useState6[0],setTx=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),amount=_useState8[0],setAmount=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isPending=_useState10[0],setIsPending=_useState10[1];useEffect(function(){asset&&amount&&receiver?setTx({amount:amount,receiver:receiver,asset:asset}):setTx();},[asset,amount,receiver]);var openNotification=function openNotification(_ref){var message=_ref.message,description=_ref.description;notification.open({placement:\"bottomRight\",message:message,description:description,onClick:function onClick(){console.log(\"Notification Clicked!\");}});};function transfer(){return _transfer.apply(this,arguments);}function _transfer(){_transfer=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var amount,receiver,asset,options,txStatus;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:amount=tx.amount,receiver=tx.receiver,asset=tx.asset;options={};_context.t0=asset.token_address;_context.next=_context.t0===\"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\"?5:7;break;case 5:options={native:\"native\",amount:Moralis.Units.ETH(amount),receiver:receiver,awaitReceipt:false};return _context.abrupt(\"break\",8);case 7:options={type:\"erc20\",amount:Moralis.Units.Token(amount,asset.decimals),receiver:receiver,contractAddress:asset.token_address,awaitReceipt:false};case 8:setIsPending(true);_context.next=11;return Moralis.transfer(options);case 11:txStatus=_context.sent;txStatus.on(\"transactionHash\",function(hash){openNotification({message:\"ðŸ”Š New Transaction\",description:\"\".concat(hash)});console.log(\"ðŸ”Š New Transaction\",hash);}).on(\"receipt\",function(receipt){openNotification({message:\"ðŸ“ƒ New Receipt\",description:\"\".concat(receipt.transactionHash)});console.log(\"ðŸ”Š New Receipt: \",receipt);setIsPending(false);}).on(\"error\",function(error){openNotification({message:\"ðŸ“ƒ Error\",description:\"\".concat(error.message)});console.error(error);setIsPending(false);});case 13:case\"end\":return _context.stop();}}},_callee);}));return _transfer.apply(this,arguments);}return/*#__PURE__*/_jsx(\"div\",{style:styles.card,children:/*#__PURE__*/_jsxs(\"div\",{style:styles.tranfer,children:[/*#__PURE__*/_jsx(\"div\",{style:styles.header,children:/*#__PURE__*/_jsx(\"h3\",{children:\"Transfer Assets\"})}),/*#__PURE__*/_jsxs(\"div\",{style:styles.select,children:[/*#__PURE__*/_jsx(\"div\",{style:styles.textWrapper,children:/*#__PURE__*/_jsx(Text,{strong:true,children:\"Address:\"})}),/*#__PURE__*/_jsx(AddressInput,{autoFocus:true,onChange:setReceiver})]}),/*#__PURE__*/_jsxs(\"div\",{style:styles.select,children:[/*#__PURE__*/_jsx(\"div\",{style:styles.textWrapper,children:/*#__PURE__*/_jsx(Text,{strong:true,children:\"Amount:\"})}),/*#__PURE__*/_jsx(Input,{size:\"large\",prefix:/*#__PURE__*/_jsx(CreditCardOutlined,{}),onChange:function onChange(e){setAmount(\"\".concat(e.target.value));}})]}),/*#__PURE__*/_jsxs(\"div\",{style:styles.select,children:[/*#__PURE__*/_jsx(\"div\",{style:styles.textWrapper,children:/*#__PURE__*/_jsx(Text,{strong:true,children:\"Asset:\"})}),/*#__PURE__*/_jsx(AssetSelector,{setAsset:setAsset,style:{width:\"100%\"}})]}),/*#__PURE__*/_jsx(Button,{type:\"primary\",size:\"large\",loading:isPending,style:{width:\"100%\",marginTop:\"25px\"},onClick:function onClick(){return transfer();},disabled:!tx,children:\"Transfer\\uD83D\\uDCB8\"})]})});}export default Transfer;","map":{"version":3,"sources":["C:/webgis/newfold/dapp-project/src/components/Wallet/components/Transfer.jsx"],"names":["CreditCardOutlined","Button","Input","notification","Text","useEffect","useState","useMoralis","AddressInput","AssetSelector","styles","card","alignItems","width","header","textAlign","input","outline","fontSize","whiteSpace","overflow","textverflow","appearance","color","fontWeight","border","backgroundColor","select","marginTop","display","textWrapper","maxWidth","row","gap","flexDirection","Transfer","Moralis","receiver","setReceiver","asset","setAsset","tx","setTx","amount","setAmount","isPending","setIsPending","openNotification","message","description","open","placement","onClick","console","log","transfer","options","token_address","native","Units","ETH","awaitReceipt","type","Token","decimals","contractAddress","txStatus","on","hash","receipt","transactionHash","error","tranfer","e","target","value"],"mappings":"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","sourcesContent":["import { CreditCardOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input, notification } from \"antd\";\r\nimport Text from \"antd/lib/typography/Text\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport AddressInput from \"../../AddressInput\";\r\nimport AssetSelector from \"./AssetSelector\";\r\n\r\nconst styles = {\r\n  card: {\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  header: {\r\n    textAlign: \"center\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    outline: \"none\",\r\n    fontSize: \"16px\",\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    textverflow: \"ellipsis\",\r\n    appearance: \"textfield\",\r\n    color: \"#041836\",\r\n    fontWeight: \"700\",\r\n    border: \"none\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  select: {\r\n    marginTop: \"20px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  textWrapper: { maxWidth: \"80px\", width: \"100%\" },\r\n  row: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    gap: \"10px\",\r\n    flexDirection: \"row\",\r\n  },\r\n};\r\n\r\nfunction Transfer() {\r\n  const { Moralis } = useMoralis();\r\n  const [receiver, setReceiver] = useState();\r\n  const [asset, setAsset] = useState();\r\n  const [tx, setTx] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [isPending, setIsPending] = useState(false);\r\n\r\n  useEffect(() => {\r\n    asset && amount && receiver ? setTx({ amount, receiver, asset }) : setTx();\r\n  }, [asset, amount, receiver]);\r\n\r\n  const openNotification = ({ message, description }) => {\r\n    notification.open({\r\n      placement: \"bottomRight\",\r\n      message,\r\n      description,\r\n      onClick: () => {\r\n        console.log(\"Notification Clicked!\");\r\n      },\r\n    });\r\n  };\r\n\r\n  async function transfer() {\r\n    const { amount, receiver, asset } = tx;\r\n\r\n    let options = {};\r\n\r\n    switch (asset.token_address) {\r\n      case \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\":\r\n        options = {\r\n          native: \"native\",\r\n          amount: Moralis.Units.ETH(amount),\r\n          receiver,\r\n          awaitReceipt: false,\r\n        };\r\n        break;\r\n      default:\r\n        options = {\r\n          type: \"erc20\",\r\n          amount: Moralis.Units.Token(amount, asset.decimals),\r\n          receiver,\r\n          contractAddress: asset.token_address,\r\n          awaitReceipt: false,\r\n        };\r\n    }\r\n\r\n    setIsPending(true);\r\n    const txStatus = await Moralis.transfer(options);\r\n\r\n    txStatus\r\n      .on(\"transactionHash\", (hash) => {\r\n        openNotification({\r\n          message: \"ðŸ”Š New Transaction\",\r\n          description: `${hash}`,\r\n        });\r\n        console.log(\"ðŸ”Š New Transaction\", hash);\r\n      })\r\n      .on(\"receipt\", (receipt) => {\r\n        openNotification({\r\n          message: \"ðŸ“ƒ New Receipt\",\r\n          description: `${receipt.transactionHash}`,\r\n        });\r\n        console.log(\"ðŸ”Š New Receipt: \", receipt);\r\n        setIsPending(false);\r\n      })\r\n      .on(\"error\", (error) => {\r\n        openNotification({\r\n          message: \"ðŸ“ƒ Error\",\r\n          description: `${error.message}`,\r\n        });\r\n        console.error(error);\r\n        setIsPending(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div style={styles.card}>\r\n      <div style={styles.tranfer}>\r\n        <div style={styles.header}>\r\n          <h3>Transfer Assets</h3>\r\n        </div>\r\n        <div style={styles.select}>\r\n          <div style={styles.textWrapper}>\r\n            <Text strong>Address:</Text>\r\n          </div>\r\n          <AddressInput autoFocus onChange={setReceiver} />\r\n        </div>\r\n        <div style={styles.select}>\r\n          <div style={styles.textWrapper}>\r\n            <Text strong>Amount:</Text>\r\n          </div>\r\n          <Input\r\n            size=\"large\"\r\n            prefix={<CreditCardOutlined />}\r\n            onChange={(e) => {\r\n              setAmount(`${e.target.value}`);\r\n            }}\r\n          />\r\n        </div>\r\n        <div style={styles.select}>\r\n          <div style={styles.textWrapper}>\r\n            <Text strong>Asset:</Text>\r\n          </div>\r\n          <AssetSelector setAsset={setAsset} style={{ width: \"100%\" }} />\r\n        </div>\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          loading={isPending}\r\n          style={{ width: \"100%\", marginTop: \"25px\" }}\r\n          onClick={() => transfer()}\r\n          disabled={!tx}\r\n        >\r\n          TransferðŸ’¸\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Transfer;\r\n"]},"metadata":{},"sourceType":"module"}