{"ast":null,"code":"var _jsxFileName = \"C:\\\\webgis\\\\newfold\\\\dapp-project\\\\src\\\\components\\\\Wallet\\\\components\\\\AssetSelector.jsx\",\n    _s = $RefreshSig$();\n\nimport { useERC20Balance } from \"hooks/useERC20Balance\";\nimport { useMoralis, useNativeBalance } from \"react-moralis\";\nimport { Image, Select } from \"antd\";\nimport { useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AssetSelector(_ref) {\n  _s();\n\n  let {\n    setAsset,\n    style\n  } = _ref;\n  const {\n    assets\n  } = useERC20Balance();\n  const {\n    data: nativeBalance,\n    nativeToken\n  } = useNativeBalance();\n  const {\n    Moralis\n  } = useMoralis();\n  const fullBalance = useMemo(() => {\n    if (!assets || !nativeBalance) return null;\n    return [...assets, {\n      balance: nativeBalance.balance,\n      decimals: nativeToken.decimal,\n      name: nativeToken.name,\n      symbol: nativeToken.symbol,\n      token_address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\"\n    }];\n  }, [assets, nativeBalance, nativeToken]);\n\n  function handleChange(value) {\n    const token = fullBalance.find(token => token.token_address === value);\n    setAsset(token);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Select, {\n    onChange: handleChange,\n    size: \"large\",\n    style: style,\n    children: fullBalance && fullBalance.map(item => {\n      var _parseFloat, _Moralis$Units;\n\n      console.log(item);\n      return /*#__PURE__*/_jsxDEV(Select.Option, {\n        value: item[\"token_address\"],\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            width: \"100%\",\n            gap: \"8px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: item.logo || \"https://etherscan.io/images/main/empty-token.png\",\n            alt: \"nologo\",\n            width: \"24px\",\n            height: \"24px\",\n            preview: false,\n            style: {\n              borderRadius: \"15px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              width: \"90%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                alignSelf: \"right\"\n              },\n              children: [\"(\", (_parseFloat = parseFloat(Moralis === null || Moralis === void 0 ? void 0 : (_Moralis$Units = Moralis.Units) === null || _Moralis$Units === void 0 ? void 0 : _Moralis$Units.FromWei(item.balance, item.decimals))) === null || _parseFloat === void 0 ? void 0 : _parseFloat.toFixed(6), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)\n      }, item[\"token_address\"], false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AssetSelector, \"5eeEwEZuqimj8nlV/ent4YMQ/nc=\", false, function () {\n  return [useERC20Balance, useNativeBalance, useMoralis];\n});\n\n_c = AssetSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssetSelector\");","map":{"version":3,"sources":["C:/webgis/newfold/dapp-project/src/components/Wallet/components/AssetSelector.jsx"],"names":["useERC20Balance","useMoralis","useNativeBalance","Image","Select","useMemo","AssetSelector","setAsset","style","assets","data","nativeBalance","nativeToken","Moralis","fullBalance","balance","decimals","decimal","name","symbol","token_address","handleChange","value","token","find","map","item","console","log","display","alignItems","width","gap","logo","borderRadius","justifyContent","alignSelf","parseFloat","Units","FromWei","toFixed"],"mappings":"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","sourcesContent":["import { useERC20Balance } from \"hooks/useERC20Balance\";\r\nimport { useMoralis, useNativeBalance } from \"react-moralis\";\r\nimport { Image, Select } from \"antd\";\r\nimport { useMemo } from \"react\";\r\n\r\nexport default function AssetSelector({ setAsset, style }) {\r\n  const { assets } = useERC20Balance();\r\n  const { data: nativeBalance, nativeToken } = useNativeBalance();\r\n  const { Moralis } = useMoralis();\r\n\r\n  const fullBalance = useMemo(() => {\r\n    if (!assets || !nativeBalance) return null;\r\n    return [\r\n      ...assets,\r\n      {\r\n        balance: nativeBalance.balance,\r\n        decimals: nativeToken.decimal,\r\n        name: nativeToken.name,\r\n        symbol: nativeToken.symbol,\r\n        token_address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\r\n      },\r\n    ];\r\n  }, [assets, nativeBalance, nativeToken]);\r\n\r\n  function handleChange(value) {\r\n    const token = fullBalance.find((token) => token.token_address === value);\r\n    setAsset(token);\r\n  }\r\n\r\n  return (\r\n    <Select onChange={handleChange} size=\"large\" style={style}>\r\n      {fullBalance &&\r\n        fullBalance.map((item) => {\r\n          console.log(item);\r\n          return (\r\n            <Select.Option\r\n              value={item[\"token_address\"]}\r\n              key={item[\"token_address\"]}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  width: \"100%\",\r\n                  gap: \"8px\",\r\n                }}\r\n              >\r\n                <Image\r\n                  src={\r\n                    item.logo ||\r\n                    \"https://etherscan.io/images/main/empty-token.png\"\r\n                  }\r\n                  alt=\"nologo\"\r\n                  width=\"24px\"\r\n                  height=\"24px\"\r\n                  preview={false}\r\n                  style={{ borderRadius: \"15px\" }}\r\n                />\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    width: \"90%\",\r\n                  }}\r\n                >\r\n                  <p>{item.symbol}</p>\r\n                  <p style={{ alignSelf: \"right\" }}>\r\n                    (\r\n                    {parseFloat(\r\n                      Moralis?.Units?.FromWei(item.balance, item.decimals),\r\n                    )?.toFixed(6)}\r\n                    )\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </Select.Option>\r\n          );\r\n        })}\r\n    </Select>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}