{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\nexport const useERC20Balance = params => {\n  _s();\n\n  const {\n    account\n  } = useMoralisWeb3Api();\n  const {\n    isInitialized,\n    chainId,\n    account: walletAddress\n  } = useMoralis();\n  const [assets, setAssets] = useState();\n  useEffect(() => {\n    if (isInitialized) {\n      fetchERC20Balance().then(balance => setAssets(balance));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isInitialized, chainId, walletAddress]);\n\n  const fetchERC20Balance = async () => {\n    return await account.getTokenBalances({\n      address: walletAddress,\n      chain: (params === null || params === void 0 ? void 0 : params.chain) || chainId\n    }).then(result => result);\n  };\n\n  return {\n    fetchERC20Balance,\n    assets\n  };\n};\n\n_s(useERC20Balance, \"k592ezaS5ynDnYisivHX/0UypHw=\", false, function () {\n  return [useMoralisWeb3Api, useMoralis];\n});","map":{"version":3,"sources":["C:/webgis/newfold/ethereum-boilerplate/src/hooks/useERC20Balance.js"],"names":["useEffect","useState","useMoralis","useMoralisWeb3Api","useERC20Balance","params","account","isInitialized","chainId","walletAddress","assets","setAssets","fetchERC20Balance","then","balance","getTokenBalances","address","chain","result"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,eAA9C;AAEA,OAAO,MAAMC,eAAe,GAAIC,MAAD,IAAY;AAAA;;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAcH,iBAAiB,EAArC;AACA,QAAM;AAAEI,IAAAA,aAAF;AAAiBC,IAAAA,OAAjB;AAA0BF,IAAAA,OAAO,EAAEG;AAAnC,MAAqDP,UAAU,EAArE;AAEA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,aAAJ,EAAmB;AACjBK,MAAAA,iBAAiB,GAAGC,IAApB,CAA0BC,OAAD,IAAaH,SAAS,CAACG,OAAD,CAA/C;AACD,KAHa,CAId;;AACD,GALQ,EAKN,CAACP,aAAD,EAAgBC,OAAhB,EAAyBC,aAAzB,CALM,CAAT;;AAOA,QAAMG,iBAAiB,GAAG,YAAY;AACpC,WAAO,MAAMN,OAAO,CACjBS,gBADU,CACO;AAChBC,MAAAA,OAAO,EAAEP,aADO;AAEhBQ,MAAAA,KAAK,EAAE,CAAAZ,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEY,KAAR,KAAiBT;AAFR,KADP,EAKVK,IALU,CAKJK,MAAD,IAAYA,MALP,CAAb;AAMD,GAPD;;AASA,SAAO;AAAEN,IAAAA,iBAAF;AAAqBF,IAAAA;AAArB,GAAP;AACD,CAvBM;;GAAMN,e;UACSD,iB,EACuCD,U","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\r\n\r\nexport const useERC20Balance = (params) => {\r\n  const { account } = useMoralisWeb3Api();\r\n  const { isInitialized, chainId, account: walletAddress } = useMoralis();\r\n\r\n  const [assets, setAssets] = useState();\r\n\r\n  useEffect(() => {\r\n    if (isInitialized) {\r\n      fetchERC20Balance().then((balance) => setAssets(balance));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isInitialized, chainId, walletAddress]);\r\n\r\n  const fetchERC20Balance = async () => {\r\n    return await account\r\n      .getTokenBalances({\r\n        address: walletAddress,\r\n        chain: params?.chain || chainId,\r\n      })\r\n      .then((result) => result);\r\n  };\r\n\r\n  return { fetchERC20Balance, assets };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}