{"ast":null,"code":"var _jsxFileName = \"C:\\\\webgis\\\\newfold\\\\ethereum-boilerplate\\\\src\\\\components\\\\AddressInput.jsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\nimport { getEllipsisTxt } from \"../helpers/formatters\";\nimport Blockie from \"./Blockie\";\nimport { Input } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddressInput(props) {\n  _s();\n\n  var _web3$eth2;\n\n  const input = useRef(null);\n  const {\n    web3\n  } = useMoralis();\n  const [address, setAddress] = useState(\"\");\n  const [validatedAddress, setValidatedAddress] = useState(\"\");\n  const [isDomain, setIsDomain] = useState(false);\n  const {\n    resolve: {\n      resolveDomain\n    }\n  } = useMoralisWeb3Api(); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (validatedAddress) props.onChange(isDomain ? validatedAddress : address);\n  }, [props, validatedAddress, isDomain, address]);\n  const updateAddress = useCallback(async value => {\n    setAddress(value);\n\n    if (isSupportedDomain(value)) {\n      const processPromise = function (promise) {\n        promise.then(addr => {\n          setValidatedAddress(addr);\n          setIsDomain(true);\n        }).catch(() => {\n          setValidatedAddress(\"\");\n        });\n      };\n\n      if (value.endsWith(\".eth\")) {\n        var _web3$eth, _web3$eth$ens;\n\n        processPromise(web3 === null || web3 === void 0 ? void 0 : (_web3$eth = web3.eth) === null || _web3$eth === void 0 ? void 0 : (_web3$eth$ens = _web3$eth.ens) === null || _web3$eth$ens === void 0 ? void 0 : _web3$eth$ens.getAddress(value));\n      } else {\n        processPromise(resolveDomain({\n          domain: value\n        }).then(r => r === null || r === void 0 ? void 0 : r.address));\n      }\n    } else if (value.length === 42) {\n      setValidatedAddress(getEllipsisTxt(value, 10));\n      setIsDomain(false);\n    } else {\n      setValidatedAddress(\"\");\n      setIsDomain(false);\n    }\n  }, [resolveDomain, web3 === null || web3 === void 0 ? void 0 : (_web3$eth2 = web3.eth) === null || _web3$eth2 === void 0 ? void 0 : _web3$eth2.ens]);\n\n  const Cross = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"22\",\n    height: \"22\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: \"2\",\n    stroke: \"#E33132\",\n    fill: \"none\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    onClick: () => {\n      setValidatedAddress(\"\");\n      setIsDomain(false);\n      setTimeout(function () {\n        input.current.focus();\n      });\n    },\n    style: {\n      cursor: \"pointer\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      stroke: \"none\",\n      d: \"M0 0h24v24H0z\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: \"18\",\n      y1: \"6\",\n      x2: \"6\",\n      y2: \"18\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: \"6\",\n      y1: \"6\",\n      x2: \"18\",\n      y2: \"18\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Input, {\n    ref: input,\n    size: \"large\",\n    placeholder: props.placeholder ? props.placeholder : \"Public address\",\n    prefix: isDomain || address.length === 42 ? /*#__PURE__*/_jsxDEV(Blockie, {\n      address: (isDomain ? validatedAddress : address).toLowerCase(),\n      size: 8,\n      scale: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this),\n    suffix: validatedAddress && /*#__PURE__*/_jsxDEV(Cross, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 35\n    }, this),\n    autoFocus: props.autoFocus,\n    value: isDomain ? `${address} (${getEllipsisTxt(validatedAddress)})` : validatedAddress || address,\n    onChange: e => {\n      updateAddress(e.target.value);\n    },\n    disabled: validatedAddress,\n    style: validatedAddress ? { ...(props === null || props === void 0 ? void 0 : props.style),\n      border: \"1px solid rgb(33, 191, 150)\"\n    } : { ...(props === null || props === void 0 ? void 0 : props.style)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddressInput, \"66+C/6DEnzORjDW8mkmSXK8vCyI=\", false, function () {\n  return [useMoralis, useMoralisWeb3Api];\n});\n\n_c = AddressInput;\n\nfunction isSupportedDomain(domain) {\n  return [\".eth\", \".crypto\", \".coin\", \".wallet\", \".bitcoin\", \".x\", \".888\", \".nft\", \".dao\", \".blockchain\"].some(tld => domain.endsWith(tld));\n}\n\nexport default AddressInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressInput\");","map":{"version":3,"sources":["C:/webgis/newfold/ethereum-boilerplate/src/components/AddressInput.jsx"],"names":["useCallback","useEffect","useRef","useState","useMoralis","useMoralisWeb3Api","getEllipsisTxt","Blockie","Input","SearchOutlined","AddressInput","props","input","web3","address","setAddress","validatedAddress","setValidatedAddress","isDomain","setIsDomain","resolve","resolveDomain","onChange","updateAddress","value","isSupportedDomain","processPromise","promise","then","addr","catch","endsWith","eth","ens","getAddress","domain","r","length","Cross","setTimeout","current","focus","cursor","placeholder","toLowerCase","autoFocus","e","target","style","border","some","tld"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\r\nimport { getEllipsisTxt } from \"../helpers/formatters\";\r\nimport Blockie from \"./Blockie\";\r\nimport { Input } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nfunction AddressInput(props) {\r\n  const input = useRef(null);\r\n  const { web3 } = useMoralis();\r\n  const [address, setAddress] = useState(\"\");\r\n  const [validatedAddress, setValidatedAddress] = useState(\"\");\r\n  const [isDomain, setIsDomain] = useState(false);\r\n  const {\r\n    resolve: { resolveDomain },\r\n  } = useMoralisWeb3Api();\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => {\r\n    if (validatedAddress) props.onChange(isDomain ? validatedAddress : address);\r\n  }, [props, validatedAddress, isDomain, address]);\r\n\r\n  const updateAddress = useCallback(\r\n    async (value) => {\r\n      setAddress(value);\r\n      if (isSupportedDomain(value)) {\r\n        const processPromise = function (promise) {\r\n          promise\r\n            .then((addr) => {\r\n              setValidatedAddress(addr);\r\n              setIsDomain(true);\r\n            })\r\n            .catch(() => {\r\n              setValidatedAddress(\"\");\r\n            });\r\n        };\r\n        if (value.endsWith(\".eth\")) {\r\n          processPromise(web3?.eth?.ens?.getAddress(value));\r\n        } else {\r\n          processPromise(\r\n            resolveDomain({\r\n              domain: value,\r\n            }).then((r) => r?.address),\r\n          );\r\n        }\r\n      } else if (value.length === 42) {\r\n        setValidatedAddress(getEllipsisTxt(value, 10));\r\n        setIsDomain(false);\r\n      } else {\r\n        setValidatedAddress(\"\");\r\n        setIsDomain(false);\r\n      }\r\n    },\r\n    [resolveDomain, web3?.eth?.ens],\r\n  );\r\n\r\n  const Cross = () => (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"22\"\r\n      height=\"22\"\r\n      viewBox=\"0 0 24 24\"\r\n      strokeWidth=\"2\"\r\n      stroke=\"#E33132\"\r\n      fill=\"none\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      onClick={() => {\r\n        setValidatedAddress(\"\");\r\n        setIsDomain(false);\r\n        setTimeout(function () {\r\n          input.current.focus();\r\n        });\r\n      }}\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n      <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\r\n      <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\r\n    </svg>\r\n  );\r\n\r\n  return (\r\n    <Input\r\n      ref={input}\r\n      size=\"large\"\r\n      placeholder={props.placeholder ? props.placeholder : \"Public address\"}\r\n      prefix={\r\n        isDomain || address.length === 42 ? (\r\n          <Blockie\r\n            address={(isDomain ? validatedAddress : address).toLowerCase()}\r\n            size={8}\r\n            scale={3}\r\n          />\r\n        ) : (\r\n          <SearchOutlined />\r\n        )\r\n      }\r\n      suffix={validatedAddress && <Cross />}\r\n      autoFocus={props.autoFocus}\r\n      value={\r\n        isDomain\r\n          ? `${address} (${getEllipsisTxt(validatedAddress)})`\r\n          : validatedAddress || address\r\n      }\r\n      onChange={(e) => {\r\n        updateAddress(e.target.value);\r\n      }}\r\n      disabled={validatedAddress}\r\n      style={\r\n        validatedAddress\r\n          ? { ...props?.style, border: \"1px solid rgb(33, 191, 150)\" }\r\n          : { ...props?.style }\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction isSupportedDomain(domain) {\r\n  return [\r\n    \".eth\",\r\n    \".crypto\",\r\n    \".coin\",\r\n    \".wallet\",\r\n    \".bitcoin\",\r\n    \".x\",\r\n    \".888\",\r\n    \".nft\",\r\n    \".dao\",\r\n    \".blockchain\",\r\n  ].some((tld) => domain.endsWith(tld));\r\n}\r\n\r\nexport default AddressInput;\r\n"]},"metadata":{},"sourceType":"module"}