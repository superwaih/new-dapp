{"ast":null,"code":"var _jsxFileName = \"C:\\\\webgis\\\\newfold\\\\ethereum-boilerplate\\\\src\\\\components\\\\Account\\\\Account.jsx\",\n    _s = $RefreshSig$();\n\nimport { useMoralis } from \"react-moralis\";\nimport { getEllipsisTxt } from \"helpers/formatters\";\nimport Blockie from \"../Blockie\";\nimport { Button, Card, Modal } from \"antd\";\nimport { useState } from \"react\";\nimport Address from \"../Address/Address\";\nimport { SelectOutlined } from \"@ant-design/icons\";\nimport { getExplorer } from \"helpers/networks\";\nimport Text from \"antd/lib/typography/Text\";\nimport { connectors } from \"./config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  account: {\n    height: \"42px\",\n    padding: \"0 15px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"fit-content\",\n    borderRadius: \"12px\",\n    backgroundColor: \"rgb(244, 244, 244)\",\n    cursor: \"pointer\"\n  },\n  text: {\n    color: \"#21BF96\"\n  },\n  connector: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"auto\",\n    justifyContent: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    padding: \"20px 5px\",\n    cursor: \"pointer\"\n  },\n  icon: {\n    alignSelf: \"center\",\n    fill: \"rgb(40, 13, 95)\",\n    flexShrink: \"0\",\n    marginBottom: \"8px\",\n    height: \"30px\"\n  }\n};\n\nfunction Account() {\n  _s();\n\n  const {\n    authenticate,\n    isAuthenticated,\n    account,\n    chainId,\n    logout\n  } = useMoralis();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isAuthModalVisible, setIsAuthModalVisible] = useState(false);\n\n  if (!isAuthenticated || !account) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsAuthModalVisible(true),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.text,\n          children: \"Authenticate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: isAuthModalVisible,\n        footer: null,\n        onCancel: () => setIsAuthModalVisible(false),\n        bodyStyle: {\n          padding: \"15px\",\n          fontSize: \"17px\",\n          fontWeight: \"500\"\n        },\n        style: {\n          fontSize: \"16px\",\n          fontWeight: \"500\"\n        },\n        width: \"340px\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"10px\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            fontWeight: \"700\",\n            fontSize: \"20px\"\n          },\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"grid\",\n            gridTemplateColumns: \"1fr 1fr\"\n          },\n          children: connectors.map((_ref, key) => {\n            let {\n              title,\n              icon,\n              connectorId\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.connector,\n              onClick: async () => {\n                try {\n                  await authenticate({\n                    provider: connectorId\n                  });\n                  window.localStorage.setItem(\"connectorId\", connectorId);\n                  setIsAuthModalVisible(false);\n                } catch (e) {\n                  console.error(e);\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: icon,\n                alt: title,\n                style: styles.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                style: {\n                  fontSize: \"14px\"\n                },\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.account,\n      onClick: () => setIsModalVisible(true),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginRight: \"5px\",\n          ...styles.text\n        },\n        children: getEllipsisTxt(account, 6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Blockie, {\n        currentWallet: true,\n        scale: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: isModalVisible,\n      footer: null,\n      onCancel: () => setIsModalVisible(false),\n      bodyStyle: {\n        padding: \"15px\",\n        fontSize: \"17px\",\n        fontWeight: \"500\"\n      },\n      style: {\n        fontSize: \"16px\",\n        fontWeight: \"500\"\n      },\n      width: \"400px\",\n      children: [\"Account\", /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          marginTop: \"10px\",\n          borderRadius: \"1rem\"\n        },\n        bodyStyle: {\n          padding: \"15px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Address, {\n          avatar: \"left\",\n          size: 6,\n          copyable: true,\n          style: {\n            fontSize: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"10px\",\n            padding: \"0 10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `${getExplorer(chainId)}/address/${account}`,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: [/*#__PURE__*/_jsxDEV(SelectOutlined, {\n              style: {\n                marginRight: \"5px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), \"View on Explorer\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"large\",\n        type: \"primary\",\n        style: {\n          width: \"100%\",\n          marginTop: \"10px\",\n          borderRadius: \"0.5rem\",\n          fontSize: \"16px\",\n          fontWeight: \"500\"\n        },\n        onClick: async () => {\n          await logout();\n          window.localStorage.removeItem(\"connectorId\");\n          setIsModalVisible(false);\n        },\n        children: \"Disconnect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Account, \"w1gse8r8NhwbC6/mphIdXdchVaY=\", false, function () {\n  return [useMoralis];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["C:/webgis/newfold/ethereum-boilerplate/src/components/Account/Account.jsx"],"names":["useMoralis","getEllipsisTxt","Blockie","Button","Card","Modal","useState","Address","SelectOutlined","getExplorer","Text","connectors","styles","account","height","padding","display","justifyContent","alignItems","width","borderRadius","backgroundColor","cursor","text","color","connector","flexDirection","marginLeft","marginRight","icon","alignSelf","fill","flexShrink","marginBottom","Account","authenticate","isAuthenticated","chainId","logout","isModalVisible","setIsModalVisible","isAuthModalVisible","setIsAuthModalVisible","fontSize","fontWeight","gridTemplateColumns","map","key","title","connectorId","provider","window","localStorage","setItem","e","console","error","marginTop","removeItem"],"mappings":"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","sourcesContent":["import { useMoralis } from \"react-moralis\";\r\nimport { getEllipsisTxt } from \"helpers/formatters\";\r\nimport Blockie from \"../Blockie\";\r\nimport { Button, Card, Modal } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport Address from \"../Address/Address\";\r\nimport { SelectOutlined } from \"@ant-design/icons\";\r\nimport { getExplorer } from \"helpers/networks\";\r\nimport Text from \"antd/lib/typography/Text\";\r\nimport { connectors } from \"./config\";\r\nconst styles = {\r\n  account: {\r\n    height: \"42px\",\r\n    padding: \"0 15px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"fit-content\",\r\n    borderRadius: \"12px\",\r\n    backgroundColor: \"rgb(244, 244, 244)\",\r\n    cursor: \"pointer\",\r\n  },\r\n  text: {\r\n    color: \"#21BF96\",\r\n  },\r\n  connector: {\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"auto\",\r\n    justifyContent: \"center\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    padding: \"20px 5px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  icon: {\r\n    alignSelf: \"center\",\r\n    fill: \"rgb(40, 13, 95)\",\r\n    flexShrink: \"0\",\r\n    marginBottom: \"8px\",\r\n    height: \"30px\",\r\n  },\r\n};\r\n\r\nfunction Account() {\r\n  const { authenticate, isAuthenticated, account, chainId, logout } =\r\n    useMoralis();\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isAuthModalVisible, setIsAuthModalVisible] = useState(false);\r\n\r\n  if (!isAuthenticated || !account) {\r\n    return (\r\n      <>\r\n        <div onClick={() => setIsAuthModalVisible(true)}>\r\n          <p style={styles.text}>Authenticate</p>\r\n        </div>\r\n        <Modal\r\n          visible={isAuthModalVisible}\r\n          footer={null}\r\n          onCancel={() => setIsAuthModalVisible(false)}\r\n          bodyStyle={{\r\n            padding: \"15px\",\r\n            fontSize: \"17px\",\r\n            fontWeight: \"500\",\r\n          }}\r\n          style={{ fontSize: \"16px\", fontWeight: \"500\" }}\r\n          width=\"340px\"\r\n        >\r\n          <div\r\n            style={{\r\n              padding: \"10px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              fontWeight: \"700\",\r\n              fontSize: \"20px\",\r\n            }}\r\n          >\r\n            Connect Wallet\r\n          </div>\r\n          <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\" }}>\r\n            {connectors.map(({ title, icon, connectorId }, key) => (\r\n              <div\r\n                style={styles.connector}\r\n                key={key}\r\n                onClick={async () => {\r\n                  try {\r\n                    await authenticate({ provider: connectorId });\r\n                    window.localStorage.setItem(\"connectorId\", connectorId);\r\n                    setIsAuthModalVisible(false);\r\n                  } catch (e) {\r\n                    console.error(e);\r\n                  }\r\n                }}\r\n              >\r\n                <img src={icon} alt={title} style={styles.icon} />\r\n                <Text style={{ fontSize: \"14px\" }}>{title}</Text>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <button\r\n        onClick={async () => {\r\n          try {\r\n            console.log(\"change\")\r\n            await web3._provider.request({\r\n              method: \"wallet_switchEthereumChain\",\r\n              params: [{ chainId: \"0x38\" }],\r\n            });\r\n            console.log(\"changed\")\r\n          } catch (e) {\r\n            console.error(e);\r\n          }\r\n        }}\r\n      >\r\n        Hi\r\n      </button> */}\r\n      <div style={styles.account} onClick={() => setIsModalVisible(true)}>\r\n        <p style={{ marginRight: \"5px\", ...styles.text }}>\r\n          {getEllipsisTxt(account, 6)}\r\n        </p>\r\n        <Blockie currentWallet scale={3} />\r\n      </div>\r\n      <Modal\r\n        visible={isModalVisible}\r\n        footer={null}\r\n        onCancel={() => setIsModalVisible(false)}\r\n        bodyStyle={{\r\n          padding: \"15px\",\r\n          fontSize: \"17px\",\r\n          fontWeight: \"500\",\r\n        }}\r\n        style={{ fontSize: \"16px\", fontWeight: \"500\" }}\r\n        width=\"400px\"\r\n      >\r\n        Account\r\n        <Card\r\n          style={{\r\n            marginTop: \"10px\",\r\n            borderRadius: \"1rem\",\r\n          }}\r\n          bodyStyle={{ padding: \"15px\" }}\r\n        >\r\n          <Address\r\n            avatar=\"left\"\r\n            size={6}\r\n            copyable\r\n            style={{ fontSize: \"20px\" }}\r\n          />\r\n          <div style={{ marginTop: \"10px\", padding: \"0 10px\" }}>\r\n            <a\r\n              href={`${getExplorer(chainId)}/address/${account}`}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <SelectOutlined style={{ marginRight: \"5px\" }} />\r\n              View on Explorer\r\n            </a>\r\n          </div>\r\n        </Card>\r\n        <Button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          style={{\r\n            width: \"100%\",\r\n            marginTop: \"10px\",\r\n            borderRadius: \"0.5rem\",\r\n            fontSize: \"16px\",\r\n            fontWeight: \"500\",\r\n          }}\r\n          onClick={async () => {\r\n            await logout();\r\n            window.localStorage.removeItem(\"connectorId\");\r\n            setIsModalVisible(false);\r\n          }}\r\n        >\r\n          Disconnect Wallet\r\n        </Button>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Account;\r\n"]},"metadata":{},"sourceType":"module"}